// forkmark, v1.0.1
// Copyright (c)2017 md.nachuo.com (zhangfucheng).
// Distributed under MIT license
// https://coding.net/u/forger

!function(g,n){if("object"==typeof exports&&"object"==typeof module)module.exports=n();else if("function"==typeof define&&define.amd)define([],n);else{var I=n();for(var t in I)("object"==typeof exports?exports:g)[t]=I[t]}}(this,function(){return function(g){function n(g){delete installedChunks[g]}function I(g){var n=document.getElementsByTagName("head")[0],I=document.createElement("script");I.type="text/javascript",I.charset="utf-8",I.src=Q.p+""+g+"."+m+".hot-update.js",n.appendChild(I)}function t(){return new Promise(function(g,n){if("undefined"==typeof XMLHttpRequest)return n(new Error("No browser support"));try{var I=new XMLHttpRequest,t=Q.p+""+m+".hot-update.json";I.open("GET",t,!0),I.timeout=1e4,I.send(null)}catch(g){return n(g)}I.onreadystatechange=function(){if(4===I.readyState)if(0===I.status)n(new Error("Manifest request to "+t+" timed out."));else if(404===I.status)g();else if(200!==I.status&&304!==I.status)n(new Error("Manifest request to "+t+" failed."));else{try{var e=JSON.parse(I.responseText)}catch(g){return void n(g)}g(e)}}})}function e(g){var n=N[g];if(!n)return Q;var I=function(I){return n.hot.active?(N[I]?N[I].parents.indexOf(g)<0&&N[I].parents.push(g):Z=[g],n.children.indexOf(I)<0&&n.children.push(I)):(console.warn("[HMR] unexpected require("+I+") from disposed module "+g),Z=[]),s=!1,Q(I)};for(var t in Q)Object.prototype.hasOwnProperty.call(Q,t)&&Object.defineProperty(I,t,function(g){return{configurable:!0,enumerable:!0,get:function(){return Q[g]},set:function(n){Q[g]=n}}}(t));return Object.defineProperty(I,"e",{enumerable:!0,value:function(g){function n(){x--,"prepare"===h&&(U[g]||i(g),0===x&&0===y&&b())}return"ready"===h&&c("prepare"),x++,Q.e(g).then(n,function(g){throw n(),g})}}),I}function C(g){var n={_acceptedDependencies:{},_declinedDependencies:{},_selfAccepted:!1,_selfDeclined:!1,_disposeHandlers:[],_main:s,active:!0,accept:function(g,I){if(void 0===g)n._selfAccepted=!0;else if("function"==typeof g)n._selfAccepted=g;else if("object"==typeof g)for(var t=0;t<g.length;t++)n._acceptedDependencies[g[t]]=I||function(){};else n._acceptedDependencies[g]=I||function(){}},decline:function(g){if(void 0===g)n._selfDeclined=!0;else if("object"==typeof g)for(var I=0;I<g.length;I++)n._declinedDependencies[g[I]]=!0;else n._declinedDependencies[g]=!0},dispose:function(g){n._disposeHandlers.push(g)},addDisposeHandler:function(g){n._disposeHandlers.push(g)},removeDisposeHandler:function(g){var I=n._disposeHandlers.indexOf(g);I>=0&&n._disposeHandlers.splice(I,1)},check:B,apply:a,status:function(g){if(!g)return h;p.push(g)},addStatusHandler:function(g){p.push(g)},removeStatusHandler:function(g){var n=p.indexOf(g);n>=0&&p.splice(n,1)},data:F[g]};return s=!0,n}function c(g){h=g;for(var n=0;n<p.length;n++)p[n].call(null,g)}function A(g){return+g+""===g?+g:g}function B(g){if("idle"!==h)throw new Error("check() is only allowed in idle status");return o=g,c("check"),t().then(function(g){if(!g)return c("idle"),null;W={},U={},V=g.c,G=g.h,c("prepare");var n=new Promise(function(g,n){r={resolve:g,reject:n}});d={};return i(0),"prepare"===h&&0===x&&0===y&&b(),n})}function l(g,n){if(V[g]&&W[g]){W[g]=!1;for(var I in n)Object.prototype.hasOwnProperty.call(n,I)&&(d[I]=n[I]);0==--y&&0===x&&b()}}function i(g){V[g]?(W[g]=!0,y++,I(g)):U[g]=!0}function b(){c("ready");var g=r;if(r=null,g)if(o)a(o).then(function(n){g.resolve(n)},function(n){g.reject(n)});else{var n=[];for(var I in d)Object.prototype.hasOwnProperty.call(d,I)&&n.push(A(I));g.resolve(n)}}function a(I){function t(g,n){for(var I=0;I<n.length;I++){var t=n[I];g.indexOf(t)<0&&g.push(t)}}if("ready"!==h)throw new Error("apply() is only allowed in ready status");I=I||{};var e,C,B,l,i,b={},a=[],u={},r=function(){console.warn("[HMR] unexpected require("+s.moduleId+") to disposed module")};for(var o in d)if(Object.prototype.hasOwnProperty.call(d,o)){i=A(o);var s;s=d[o]?function(g){for(var n=[g],I={},e=n.slice().map(function(g){return{chain:[g],id:g}});e.length>0;){var C=e.pop(),c=C.id,A=C.chain;if((l=N[c])&&!l.hot._selfAccepted){if(l.hot._selfDeclined)return{type:"self-declined",chain:A,moduleId:c};if(l.hot._main)return{type:"unaccepted",chain:A,moduleId:c};for(var B=0;B<l.parents.length;B++){var i=l.parents[B],b=N[i];if(b){if(b.hot._declinedDependencies[c])return{type:"declined",chain:A.concat([i]),moduleId:c,parentId:i};n.indexOf(i)>=0||(b.hot._acceptedDependencies[c]?(I[i]||(I[i]=[]),t(I[i],[c])):(delete I[i],n.push(i),e.push({chain:A.concat([i]),id:i})))}}}}return{type:"accepted",moduleId:g,outdatedModules:n,outdatedDependencies:I}}(i):{type:"disposed",moduleId:o};var X=!1,p=!1,y=!1,x="";switch(s.chain&&(x="\nUpdate propagation: "+s.chain.join(" -> ")),s.type){case"self-declined":I.onDeclined&&I.onDeclined(s),I.ignoreDeclined||(X=new Error("Aborted because of self decline: "+s.moduleId+x));break;case"declined":I.onDeclined&&I.onDeclined(s),I.ignoreDeclined||(X=new Error("Aborted because of declined dependency: "+s.moduleId+" in "+s.parentId+x));break;case"unaccepted":I.onUnaccepted&&I.onUnaccepted(s),I.ignoreUnaccepted||(X=new Error("Aborted because "+i+" is not accepted"+x));break;case"accepted":I.onAccepted&&I.onAccepted(s),p=!0;break;case"disposed":I.onDisposed&&I.onDisposed(s),y=!0;break;default:throw new Error("Unexception type "+s.type)}if(X)return c("abort"),Promise.reject(X);if(p){u[i]=d[i],t(a,s.outdatedModules);for(i in s.outdatedDependencies)Object.prototype.hasOwnProperty.call(s.outdatedDependencies,i)&&(b[i]||(b[i]=[]),t(b[i],s.outdatedDependencies[i]))}y&&(t(a,[s.moduleId]),u[i]=r)}var U=[];for(C=0;C<a.length;C++)i=a[C],N[i]&&N[i].hot._selfAccepted&&U.push({module:i,errorHandler:N[i].hot._selfAccepted});c("dispose"),Object.keys(V).forEach(function(g){!1===V[g]&&n(g)});for(var W,Y=a.slice();Y.length>0;)if(i=Y.pop(),l=N[i]){var H={},O=l.hot._disposeHandlers;for(B=0;B<O.length;B++)(e=O[B])(H);for(F[i]=H,l.hot.active=!1,delete N[i],B=0;B<l.children.length;B++){var D=N[l.children[B]];D&&((W=D.parents.indexOf(i))>=0&&D.parents.splice(W,1))}}var T,R;for(i in b)if(Object.prototype.hasOwnProperty.call(b,i)&&(l=N[i]))for(R=b[i],B=0;B<R.length;B++)T=R[B],(W=l.children.indexOf(T))>=0&&l.children.splice(W,1);c("apply"),m=G;for(i in u)Object.prototype.hasOwnProperty.call(u,i)&&(g[i]=u[i]);var v=null;for(i in b)if(Object.prototype.hasOwnProperty.call(b,i)){l=N[i],R=b[i];var f=[];for(C=0;C<R.length;C++)T=R[C],e=l.hot._acceptedDependencies[T],f.indexOf(e)>=0||f.push(e);for(C=0;C<f.length;C++){e=f[C];try{e(R)}catch(g){I.onErrored&&I.onErrored({type:"accept-errored",moduleId:i,dependencyId:R[C],error:g}),I.ignoreErrored||v||(v=g)}}}for(C=0;C<U.length;C++){var J=U[C];i=J.module,Z=[i];try{Q(i)}catch(g){if("function"==typeof J.errorHandler)try{J.errorHandler(g)}catch(n){I.onErrored&&I.onErrored({type:"self-accept-error-handler-errored",moduleId:i,error:n,orginalError:g}),I.ignoreErrored||v||(v=n),v||(v=g)}else I.onErrored&&I.onErrored({type:"self-accept-errored",moduleId:i,error:g}),I.ignoreErrored||v||(v=g)}}return v?(c("fail"),Promise.reject(v)):(c("idle"),Promise.resolve(a))}function Q(n){if(N[n])return N[n].exports;var I=N[n]={i:n,l:!1,exports:{},hot:C(n),parents:(X=Z,Z=[],X),children:[]};return g[n].call(I.exports,I,I.exports,e(n)),I.l=!0,I.exports}var u=this.webpackHotUpdate;this.webpackHotUpdate=function(g,n){l(g,n),u&&u(g,n)};var r,d,G,o=!0,m="1ac3a6a904a5673c28ac",F={},s=!0,Z=[],X=[],p=[],h="idle",y=0,x=0,U={},W={},V={},N={};return Q.m=g,Q.c=N,Q.i=function(g){return g},Q.d=function(g,n,I){Q.o(g,n)||Object.defineProperty(g,n,{configurable:!1,enumerable:!0,get:I})},Q.n=function(g){var n=g&&g.__esModule?function(){return g.default}:function(){return g};return Q.d(n,"a",n),n},Q.o=function(g,n){return Object.prototype.hasOwnProperty.call(g,n)},Q.p="",Q.h=function(){return m},e(11)(Q.s=11)}([function(module,exports,__webpack_require__){eval("/*\n    selection range API\n*/\n\nvar UA = __webpack_require__(/*! ./dop.util */ 1).UA;\n\n// 构造函数\nfunction Selection(inputArea) {\n    this.inputArea = inputArea;\n    this.currentRange = null;\n    this.collapsedRange = null;\n}\n\n// 获取 range 对象\nSelection.prototype.getRange = function () {\n    if (!this.currentRange) {\n        this.saveRange();\n    }\n    return this.currentRange;\n};\n\n// 保存选区\nSelection.prototype.saveRange = function (range) {\n    if (range) {\n        // 保存已有选区\n        this.currentRange = range;\n        return\n    }\n    // 获取当前的选区\n    const selection = window.getSelection();\n    if (selection.rangeCount === 0) {\n        return;\n    }\n    range = selection.getRangeAt(0);\n    // 判断选区内容是否在编辑内容之内\n    const container = this.getSelectionContainer(range)\n    if (!container) {\n        return;\n    }\n    if (this.inputArea.contains(container)) {\n        // 是编辑内容之内的\n        this.currentRange = range;\n    }\n};\n\n// 设置选区到document\nSelection.prototype.restoreSelection = function () {\n    if (!this.currentRange) {\n        return;\n    }\n    const range = this.currentRange.cloneRange();\n    const selection = window.getSelection();\n    selection.removeAllRanges();\n    selection.addRange(range);\n};\n\n// 折叠选区\nSelection.prototype.collapseRange = function (toStart) {\n    if (toStart == null) {\n        // 默认为 false\n        toStart = false;\n    }\n    const range = this.currentRange;\n    if (range) {\n        this.collapsedRange = range.cloneRange();\n        range.collapse(toStart);\n    }\n};\n\n// 恢复上次的选区折叠\nSelection.prototype.recollapse = function () {\n    const collapsed = this.collapsedRange;\n    if (!collapsed) {\n        return;\n    }\n    const range = this.currentRange;\n    if (!collapsed) {\n        return;\n    }\n    range.setStart(collapsed.startContainer, collapsed.startOffset);\n    range.setEnd(collapsed.endContainer, collapsed.endOffset);\n};\n\n// 选中区域的文字\nSelection.prototype.getSelectionText = function () {\n    const range = this.currentRange;\n    if (range) {\n        return range.toString();\n    } else {\n        return '';\n    }\n};\n\n// 包含全部选区的container\nSelection.prototype.getSelectionContainer = function (range) {\n    range = range || this.currentRange;\n    let elem;\n    if (range) {\n        elem = range.commonAncestorContainer;\n        if (elem.nodeType == 1) {\n            return elem;\n        } else {\n            return elem.parentNode;\n        }\n    }\n};\n\nSelection.prototype.getStartElement = function (range) {\n    range = range || this.currentRange;\n    let elem;\n    if (range) {\n        elem = range.startContainer;\n        return elem.nodeType === 1 ? elem : elem.parentNode;\n    }\n};\n\nSelection.prototype.getEndElement = function (range) {\n    range = range || this.currentRange;\n    let elem;\n    if (range) {\n        elem = range.endContainer;\n        return elem.nodeType === 1 ? elem : elem.parentNode;\n    }\n};\n\n// 选区是否为空\nSelection.prototype.isSelectionEmpty = function () {\n    if (range && range.startContainer) {\n        if (range.startContainer === range.endContainer) {\n            if (range.startOffset === range.endOffset) {\n                return true;\n            }\n        }\n    }\n    return false;\n};\n\nSelection.prototype.offset = function(offset) {\n    this.offsetStart(offset);\n    this.offsetEnd(offset);\n}\n\nSelection.prototype.offsetStart = function(offset) {\n    let range = this.currentRange;\n    if (!range) {\n        return;\n    }\n    let startContainer = range.startContainer;\n    let remain = range.startContainer.length - range.startOffset;\n    if (offset < remain) {\n        remain = offset;\n    }\n    range.setStart(startContainer, range.startOffset + remain);\n}\n\nSelection.prototype.offsetEnd = function(offset) {\n    let range = this.currentRange;\n    if (!range) {\n        return;\n    }\n    let endContainer = range.endContainer;\n    let remain = range.endContainer.length - range.endOffset;\n    if (offset < remain) {\n        remain = offset;\n    }\n    range.setEnd(endContainer, range.endOffset + remain);\n}\n\n// 创建一个空白（即 &#8203 字符）选区\nSelection.prototype.createEmptyRange = function () {\n    const range = this.getRange();\n    let elem;\n\n    if (!range) {\n        // 当前无 range\n        return\n    }\n    if (!this.isSelectionEmpty()) {\n        // 当前选区必须没有内容才可以\n        return\n    }\n\n    try {\n        // 目前只支持 webkit 内核\n        if (UA.isWebkit()) {\n            // 插入 &#8203\n            document.execCommand('insertHTML', false, '&#8203;');\n            // 修改 offset 位置\n            range.setEnd(range.endContainer, range.endOffset + 1)\n            // 存储\n            this.saveRange(range)\n        } else {\n            elem = document.createElement('div');\n            elem.innerHTML = '<strong>&#8203;</strong>';\n            elem = elem.children[0];\n            const range = this.getRange()\n            if (range.insertNode) {\n                range.deleteContents()\n                range.insertNode(elem);\n            }\n            this.createRangeByElement(elem, true)\n        }\n    } catch (ex) {\n        // 部分情况下会报错，兼容一下\n    }\n};\n\n// 根据 Elem 设置选区\nSelection.prototype.createRangeByElement = function (elem, toStart, isContent) {\n    // toStart - true 开始位置，false 结束位置\n    // isContent - 是否选中Elem的内容\n    if (!elem) {\n        return\n    }\n\n    const range = document.createRange();\n\n    if (isContent) {\n        range.selectNodeContents(elem);\n    } else {\n        range.selectNode(elem);\n    }\n\n    if (typeof toStart === 'boolean') {\n        range.collapse(toStart);\n    }\n\n    // 存储 range\n    this.saveRange(range);\n    this.restoreSelection();\n}\n\nSelection.prototype.getRangeHTML = function() {\n    let range = this.getRange();\n    if (!range) {\n        return null;\n    }\n    var doc = range.extractContents();\n    var html = new XMLSerializer().serializeToString(doc);\n    return html;\n}\n\nmodule.exports = Selection;\n//export default Selection;//# sourceMappingURL=data:application/json;charset=utf-8;base64,")},function(module,exports){eval("const UA = {\n    _ua: navigator.userAgent,\n\n    // 是否 webkit\n    isWebkit: function () {\n        const reg = /webkit/i\n        return reg.test(this._ua)\n    },\n\n    // 是否 IE\n    isIE: function () {\n        return 'ActiveXObject' in window\n    }\n}\n\nfunction dop(html) {\n    var container = document.createElement('div');\n    container.innerHTML = html;\n    return container.children;\n}\n\nmodule.exports = {\n    'UA': UA, \n    'dop': dop\n}//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMS5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3NyYy9kb3AudXRpbC5qcz9jMDljIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IFVBID0ge1xuICAgIF91YTogbmF2aWdhdG9yLnVzZXJBZ2VudCxcblxuICAgIC8vIOaYr+WQpiB3ZWJraXRcbiAgICBpc1dlYmtpdDogZnVuY3Rpb24gKCkge1xuICAgICAgICBjb25zdCByZWcgPSAvd2Via2l0L2lcbiAgICAgICAgcmV0dXJuIHJlZy50ZXN0KHRoaXMuX3VhKVxuICAgIH0sXG5cbiAgICAvLyDmmK/lkKYgSUVcbiAgICBpc0lFOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiAnQWN0aXZlWE9iamVjdCcgaW4gd2luZG93XG4gICAgfVxufVxuXG5mdW5jdGlvbiBkb3AoaHRtbCkge1xuICAgIHZhciBjb250YWluZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICBjb250YWluZXIuaW5uZXJIVE1MID0gaHRtbDtcbiAgICByZXR1cm4gY29udGFpbmVyLmNoaWxkcmVuO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgICAnVUEnOiBVQSwgXG4gICAgJ2RvcCc6IGRvcFxufVxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vc3JjL2RvcC51dGlsLmpzXG4vLyBtb2R1bGUgaWQgPSAxXG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=")},function(module,exports){eval('var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function("return this")() || (1,eval)("this");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === "object")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it\'s\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMi5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8od2VicGFjaykvYnVpbGRpbi9nbG9iYWwuanM/MzY5OCJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgZztcclxuXHJcbi8vIFRoaXMgd29ya3MgaW4gbm9uLXN0cmljdCBtb2RlXHJcbmcgPSAoZnVuY3Rpb24oKSB7XHJcblx0cmV0dXJuIHRoaXM7XHJcbn0pKCk7XHJcblxyXG50cnkge1xyXG5cdC8vIFRoaXMgd29ya3MgaWYgZXZhbCBpcyBhbGxvd2VkIChzZWUgQ1NQKVxyXG5cdGcgPSBnIHx8IEZ1bmN0aW9uKFwicmV0dXJuIHRoaXNcIikoKSB8fCAoMSxldmFsKShcInRoaXNcIik7XHJcbn0gY2F0Y2goZSkge1xyXG5cdC8vIFRoaXMgd29ya3MgaWYgdGhlIHdpbmRvdyByZWZlcmVuY2UgaXMgYXZhaWxhYmxlXHJcblx0aWYodHlwZW9mIHdpbmRvdyA9PT0gXCJvYmplY3RcIilcclxuXHRcdGcgPSB3aW5kb3c7XHJcbn1cclxuXHJcbi8vIGcgY2FuIHN0aWxsIGJlIHVuZGVmaW5lZCwgYnV0IG5vdGhpbmcgdG8gZG8gYWJvdXQgaXQuLi5cclxuLy8gV2UgcmV0dXJuIHVuZGVmaW5lZCwgaW5zdGVhZCBvZiBub3RoaW5nIGhlcmUsIHNvIGl0J3NcclxuLy8gZWFzaWVyIHRvIGhhbmRsZSB0aGlzIGNhc2UuIGlmKCFnbG9iYWwpIHsgLi4ufVxyXG5cclxubW9kdWxlLmV4cG9ydHMgPSBnO1xyXG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAod2VicGFjaykvYnVpbGRpbi9nbG9iYWwuanNcbi8vIG1vZHVsZSBpZCA9IDJcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9')},function(module,exports,__webpack_require__){eval("/*var parse = require('./src/flowchart.parse');\nrequire('./src/jquery-plugin');\n\nvar FlowChart = {\n\tparse: parse\n};\n\nif (typeof window !== 'undefined') {\n\twindow.flowchart = FlowChart;\n}*/\n\n__webpack_require__(/*! ./src/entry */ 9);\n// module.exports = FlowChart;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL2luZGV4LmpzPzI2NDUiXSwic291cmNlc0NvbnRlbnQiOlsiLyp2YXIgcGFyc2UgPSByZXF1aXJlKCcuL3NyYy9mbG93Y2hhcnQucGFyc2UnKTtcbnJlcXVpcmUoJy4vc3JjL2pxdWVyeS1wbHVnaW4nKTtcblxudmFyIEZsb3dDaGFydCA9IHtcblx0cGFyc2U6IHBhcnNlXG59O1xuXG5pZiAodHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcpIHtcblx0d2luZG93LmZsb3djaGFydCA9IEZsb3dDaGFydDtcbn0qL1xuXG5yZXF1aXJlKCcuL3NyYy9lbnRyeScpO1xuLy8gbW9kdWxlLmV4cG9ydHMgPSBGbG93Q2hhcnQ7XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL2luZGV4LmpzXG4vLyBtb2R1bGUgaWQgPSAzXG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9")},function(module,exports){eval("// defaults\nmodule.exports = {\n    'contentName': 'forkmde-content', \n    'contentId': 'forkmde-content'\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3NyYy9jb21tb24uZGVmYXVsdHMuanM/NDQyMyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBkZWZhdWx0c1xubW9kdWxlLmV4cG9ydHMgPSB7XG4gICAgJ2NvbnRlbnROYW1lJzogJ2ZvcmttZGUtY29udGVudCcsIFxuICAgICdjb250ZW50SWQnOiAnZm9ya21kZS1jb250ZW50J1xufTtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vc3JjL2NvbW1vbi5kZWZhdWx0cy5qc1xuLy8gbW9kdWxlIGlkID0gNFxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9")},function(module,exports){eval("/**\n * similar with underscore\n */\nfunction inherits(ctor, superCtor) {\n    if (typeof(Object.create) === 'function') {\n        // implementation from standard node.js 'util' module\n        ctor.super_ = superCtor;\n        ctor.prototype = Object.create(superCtor.prototype, {\n            constructor: {\n                value: ctor,\n                enumerable: false,\n                writable: true,\n                configurable: true\n            }\n        });\n    } else {\n        // old school shim for old browsers\n        ctor.super_ = superCtor;\n        var TempCtor = function () {};\n        TempCtor.prototype = superCtor.prototype;\n        ctor.prototype = new TempCtor();\n        ctor.prototype.constructor = ctor;\n    }\n}\n\nfunction insertText(text) {\n    var sel, range, html;\n    if (window.getSelection) {\n        sel = window.getSelection();\n        if (sel.getRangeAt && sel.rangeCount) {\n            range = sel.getRangeAt(0);\n            //range.deleteContents();\n            range.insertNode( document.createTextNode(text) );\n        }\n    } else if (document.selection && document.selection.createRange) {\n        document.selection.createRange().text = text;\n    }\n}\n\nfunction each(arr, callback) {\n    for (var i = 0 ; i < arr.length ; i++) {\n        callback(arr[i]);\n    }\n}\nfunction replace(regex, opt) {\n    regex = regex.source;\n    opt = opt || '';\n    return function self(name, val) {\n        if (!name) return new RegExp(regex, opt);\n        val = val.source || val;\n        val = val.replace(/(^|[^\\[])\\^/g, '$1');\n        regex = regex.replace(name, val);\n        return self;\n    };\n}\n\n/* ==========这都是网上找的，存在这儿作为参考，本项目只需要一个弱化版本==============\n\nfunction pasteHtmlAtCaret(html, selectPastedContent, iframe) {\n    var sel, range;\n    var win = iframe ? iframe.contentWindow : window;\n    var doc = win.document;\n    if (win.getSelection) {\n        // IE9 and non-IE\n        sel = win.getSelection();\n        if (sel.getRangeAt && sel.rangeCount) {\n            range = sel.getRangeAt(0);\n            range.deleteContents();\n\n            // Range.createContextualFragment() would be useful here but is\n            // only relatively recently standardized and is not supported in\n            // some browsers (IE9, for one)\n            var el = doc.createElement(\"div\");\n            el.innerHTML = html;\n            var frag = doc.createDocumentFragment(), node, lastNode;\n            while ( (node = el.firstChild) ) {\n                lastNode = frag.appendChild(node);\n            }\n            var firstNode = frag.firstChild;\n            range.insertNode(frag);\n\n            // Preserve the selection\n            if (lastNode) {\n                range = range.cloneRange();\n                range.setStartAfter(lastNode);\n                if (selectPastedContent) {\n                    range.setStartBefore(firstNode);\n                } else {\n                    range.collapse(true);\n                }\n                sel.removeAllRanges();\n                sel.addRange(range);\n            }\n        }\n    } else if ( (sel = doc.selection) && sel.type != \"Control\") {\n        // IE < 9\n        var originalRange = sel.createRange();\n        originalRange.collapse(true);\n        sel.createRange().pasteHTML(html);\n        if (selectPastedContent) {\n            range = sel.createRange();\n            range.setEndPoint(\"StartToStart\", originalRange);\n            range.select();\n        }\n    }\n}\n\nfunction saveSelection() {\n    if (window.getSelection) {\n        sel = window.getSelection();\n        if (sel.getRangeAt && sel.rangeCount) {\n            return sel.getRangeAt(0);\n        }\n    } else if (document.selection && document.selection.createRange) {\n        return document.selection.createRange();\n    }\n    return null;\n}\n\nfunction restoreSelection(range) {\n    if (range) {\n        if (window.getSelection) {\n            sel = window.getSelection();\n            sel.removeAllRanges();\n            sel.addRange(range);\n        } else if (document.selection && range.select) {\n            range.select();\n        }\n    }\n}\n\n*/\n\nfunction isRangeIn(range, container) {\n    var node = range.startContainer;\n    while (node) {\n        if (node == container) {\n            return true;\n        }\n        node = node.parentNode;\n    }\n    return false;\n}\n// ref: http://kjah.iteye.com/blog/420624\nfunction roundText(prefix, suffix, container) {\n    var selection, range;\n    if (window.getSelection) {\n        // IE9 and non-IE\n        selection = window.getSelection();\n        if (selection.getRangeAt && selection.rangeCount) {\n            range = selection.getRangeAt(0);\n            console.dir(selection);\n\n            if (!isRangeIn(range, container) || !isRangeIn(range, container)) return;\n            // range.deleteContents();\n            // console.log(range.startContainer);\n\n            var preTextNode = document.createTextNode(prefix);\n            var sufTextNode = document.createTextNode(suffix);\n            range.insertNode(preTextNode);\n            range.collapse(false);\n            range.insertNode(sufTextNode);\n\n            range.setStartAfter(preTextNode);\n            range.setEndBefore(sufTextNode);\n\n            range = range.cloneRange();\n            selection.removeAllRanges();\n            selection.addRange(range);\n        }\n    } else if ( (selection = document.selection) && selection.type != \"Control\") {\n        // IE < 9\n        throw \"ForkMark is not supported in current browser, please contact zhfchdev@gmail.com\";\n    }\n}\n\nString.prototype.trim = function() {\n    return this.replace(/^\\s+|\\s+$/gm,'');\n}\n\nArray.prototype.addAll = function(arr) {\n    for (var i = 0 ; i < arr.length ; i++) {\n        this.push(arr[i]);\n    }\n};\n\nfunction TimeoutLock(obj, timeout) {\n    this.obj = obj;\n    this.time = 0;\n    this.timeout = timeout;\n}\nTimeoutLock.prototype.update = function(obj) {\n    this.obj = obj;\n    this.time = (new Date()).getTime();\n}\nTimeoutLock.prototype.check = function(obj) {\n    var time = (new Date()).getTime();\n    return this.obj == obj || time - this.time >= this.timeout;\n}\n\nmodule.exports = {\n    inherits: inherits, \n    roundText: roundText, \n    each: each, \n    replace: replace, \n    TimeoutLock: TimeoutLock\n}//# sourceMappingURL=data:application/json;charset=utf-8;base64,")},function(module,exports,__webpack_require__){eval("/* WEBPACK VAR INJECTION */(function(global) {(function() {\n\nfunction merge(obj) {\n    var i = 1\n        , target\n        , key;\n\n    for (; i < arguments.length; i++) {\n        target = arguments[i];\n        for (key in target) {\n            if (Object.prototype.hasOwnProperty.call(target, key)) {\n                obj[key] = target[key];\n            }\n        }\n    }\n    return obj;\n}\n\nfunction newArray(m, n) {\n    var arr = new Array(m);\n    if (n) {\n        for (var i = 0 ; i < m ; i++) {\n            arr[i] = new Array(n);\n        }\n    }\n    return arr;\n}\n\nfunction getMaxMatch(arr1, arr2) {\n    var m = arr1.length;\n    var n = arr2.length;\n    if (m == 0 && n == 0) {\n        // 无变化\n        return {removed: [], added: []};\n    }\n    if (m == 0) {\n        // 全新增\n        var added = new Array();\n        for (var i = 0 ; i < n ; i++) {\n            added.push({\n                pos: i, \n                to: i, \n                content: arr2[i]\n            });\n        }\n        return {removed: [], added: added};\n    }\n    if (n == 0) {\n        // 全删除\n        var removed = new Array();\n        for (var i = 0 ; i < m ; i++) {\n            removed.push({\n                from: 0, \n                content: arr1[i]\n            });\n        }\n        return {removed: removed, added: []};\n    }\n    var i, j, k;\n\n    var p = newArray(m, n);\n    for (i = 0 ; i < m ; i++) {\n        for (j = 0 ; j < n ; j++) {\n            if (eq(arr1[i], arr2[j])) {\n                p[i][j]=1;\n            } else {\n                p[i][j]=0;\n            }\n        }\n    }\n    var q = newArray(m+1, n+1);\n    for (i = 0 ; i < m + 1 ; i++) {\n        q[i][n] = 0;\n    }\n    for (i = 0 ; i < n + 1 ; i++) {\n        q[m][i] = 0; \n    }\n\n    for (i = m - 1 ; i >= 0 ; i--) {\n        for (j = n - 1 ; j >= 0 ; j--) {\n            var max, maxi, maxj;\n            if (q[i][j+1] >= q[i+1][j]) {\n                max = q[i][j+1];\n            } else {\n                max = q[i+1][j];\n            }\n            if (q[i+1][j+1] + p[i][j] > max) {\n                max = q[i+1][j+1]+1;\n            }\n            q[i][j] = max;\n        }\n    }\n\n    var maxQ = -1;\n    for (i = 0 ; i < m ; i++) {\n        if (p[i][0] == 1 && (maxQ == -1 || q[i][0] > maxQ)) {  \n            maxQ = q[i][0];\n        }\n    }\n    for (i = 0 ; i < n ; i++) {\n        if (p[0][i] == 1 && q[0][i] > maxQ) {  \n             maxQ = q[0][i];\n         }\n    }\n\n    var s = maxQ;\n    var path = new Array();\n    var h = -1;\n\n    for (i = 0 ; i < m ; i++) {\n        for (j = 0 ; j < n ; j++) {\n            if (p[i][j] == 1 && q[i][j] == maxQ) {\n                var x = i;\n                var y = j;\n                path.push(i);\n                path.push(j);\n                s = s - 1;\n                while (s > 0) {\n                    var signal = true; \n                    var u, v, x1, y1;\n                    for (u = x + 1 ; u < m && signal ; u++) {\n                        for ( v = y + 1 ; v < n && signal ; v++) {\n                            if (p[u][v] == 1 && q[u][v] == s) {\n                                path.push(u);\n                                path.push(v);\n                                x1 = u;\n                                y1 = v;\n                                signal=false;\n                            }\n                        }\n                    }\n                    x = x1;\n                    y = y1;\n                    s = s-1;\n                }\n                h = i;\n                break;\n            }\n        }\n        if (h > -1) {\n            break;\n        }\n    }\n\n    var ti = 0, tj = 0;\n    var si, sj, sum = 0;\n\n    var removed = new Array();\n    var added = new Array();\n    var remain = new Array();\n\n    for (k = 0 ; k < path.length ; k = k + 2) {\n        si = path[k];\n        sj = path[k+1];\n        remain.push({\n            from: si, \n            to: sj\n        });\n        \n        for (j = ti ; j < si ; j++) {\n            removed.push({\n                from: j + sum, // 从哪儿删除\n                content: arr1[j]\n            });\n            sum--;\n        }\n        for (j = tj ; j < sj ; j++) {\n            added.push({\n                to: j, // 调整后的位置\n                content: arr2[j]\n            });\n        }\n        ti = si;\n        tj = sj;\n        ti++;\n        tj++;\n    }\n    si = m;\n    sj = n;\n    for (j = ti ; j < si ; j++) {\n        removed.push({\n            from: j + sum, \n            content: arr1[j]\n        });\n        sum--;\n    }\n    for (j = tj ; j < sj ; j++) {\n        added.push({\n            to: j,  // 调整后的位置\n            content: arr2[j]\n        });\n    }\n    return {\n        removed: removed, \n        added: added, \n        remain: remain\n    }\n}\n\n// 去除<span offset=\"xxx\" length=\"xxx\"></span>的影响来比较，这个不同理论上应该放在外层，\n// 但是因为返回的added直接就是string而不是index，放在外层不好处理，待改进！\nfunction eq(html1, html2) {\n    /*var a1 = html1;\n    var a1 = a1.substring(a1.indexOf('>') + 1);\n    var a1 = a1.substring(0, a1.lastIndexOf('<'));\n    var a2 = html2;\n    var a2 = a2.substring(a2.indexOf('>') + 1);\n    var a2 = a2.substring(0, a2.lastIndexOf('<'));\n    return a1 == a2;*/\n    return html1 == html2;\n}\n\nfunction diff(arr1, arr2) {\n    if (!arr1) {\n        arr1 = new Array();\n    }\n    if (!arr2) {\n        arr2 = new Array();\n    }\n    return getMaxMatch(arr1, arr2);\n}\n\nif (true) {\n    module.exports = diff;\n} else if (typeof define === 'function' && define.amd) {\n    define(function() { return diff; });\n} else {\n    this.diff = diff;\n}\n\n}).call(function() {\n  return this || (typeof window !== 'undefined' ? window : global);\n}());\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../../../../../usr/local/lib/~/webpack/buildin/global.js */ 2)))//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNi5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3NyYy9kaWZmLnRleHQuanM/MDYxMyJdLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24oKSB7XG5cbmZ1bmN0aW9uIG1lcmdlKG9iaikge1xuICAgIHZhciBpID0gMVxuICAgICAgICAsIHRhcmdldFxuICAgICAgICAsIGtleTtcblxuICAgIGZvciAoOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIHRhcmdldCA9IGFyZ3VtZW50c1tpXTtcbiAgICAgICAgZm9yIChrZXkgaW4gdGFyZ2V0KSB7XG4gICAgICAgICAgICBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHRhcmdldCwga2V5KSkge1xuICAgICAgICAgICAgICAgIG9ialtrZXldID0gdGFyZ2V0W2tleV07XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIG9iajtcbn1cblxuZnVuY3Rpb24gbmV3QXJyYXkobSwgbikge1xuICAgIHZhciBhcnIgPSBuZXcgQXJyYXkobSk7XG4gICAgaWYgKG4pIHtcbiAgICAgICAgZm9yICh2YXIgaSA9IDAgOyBpIDwgbSA7IGkrKykge1xuICAgICAgICAgICAgYXJyW2ldID0gbmV3IEFycmF5KG4pO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiBhcnI7XG59XG5cbmZ1bmN0aW9uIGdldE1heE1hdGNoKGFycjEsIGFycjIpIHtcbiAgICB2YXIgbSA9IGFycjEubGVuZ3RoO1xuICAgIHZhciBuID0gYXJyMi5sZW5ndGg7XG4gICAgaWYgKG0gPT0gMCAmJiBuID09IDApIHtcbiAgICAgICAgLy8g5peg5Y+Y5YyWXG4gICAgICAgIHJldHVybiB7cmVtb3ZlZDogW10sIGFkZGVkOiBbXX07XG4gICAgfVxuICAgIGlmIChtID09IDApIHtcbiAgICAgICAgLy8g5YWo5paw5aKeXG4gICAgICAgIHZhciBhZGRlZCA9IG5ldyBBcnJheSgpO1xuICAgICAgICBmb3IgKHZhciBpID0gMCA7IGkgPCBuIDsgaSsrKSB7XG4gICAgICAgICAgICBhZGRlZC5wdXNoKHtcbiAgICAgICAgICAgICAgICBwb3M6IGksIFxuICAgICAgICAgICAgICAgIHRvOiBpLCBcbiAgICAgICAgICAgICAgICBjb250ZW50OiBhcnIyW2ldXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4ge3JlbW92ZWQ6IFtdLCBhZGRlZDogYWRkZWR9O1xuICAgIH1cbiAgICBpZiAobiA9PSAwKSB7XG4gICAgICAgIC8vIOWFqOWIoOmZpFxuICAgICAgICB2YXIgcmVtb3ZlZCA9IG5ldyBBcnJheSgpO1xuICAgICAgICBmb3IgKHZhciBpID0gMCA7IGkgPCBtIDsgaSsrKSB7XG4gICAgICAgICAgICByZW1vdmVkLnB1c2goe1xuICAgICAgICAgICAgICAgIGZyb206IDAsIFxuICAgICAgICAgICAgICAgIGNvbnRlbnQ6IGFycjFbaV1cbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB7cmVtb3ZlZDogcmVtb3ZlZCwgYWRkZWQ6IFtdfTtcbiAgICB9XG4gICAgdmFyIGksIGosIGs7XG5cbiAgICB2YXIgcCA9IG5ld0FycmF5KG0sIG4pO1xuICAgIGZvciAoaSA9IDAgOyBpIDwgbSA7IGkrKykge1xuICAgICAgICBmb3IgKGogPSAwIDsgaiA8IG4gOyBqKyspIHtcbiAgICAgICAgICAgIGlmIChlcShhcnIxW2ldLCBhcnIyW2pdKSkge1xuICAgICAgICAgICAgICAgIHBbaV1bal09MTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgcFtpXVtqXT0wO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIHZhciBxID0gbmV3QXJyYXkobSsxLCBuKzEpO1xuICAgIGZvciAoaSA9IDAgOyBpIDwgbSArIDEgOyBpKyspIHtcbiAgICAgICAgcVtpXVtuXSA9IDA7XG4gICAgfVxuICAgIGZvciAoaSA9IDAgOyBpIDwgbiArIDEgOyBpKyspIHtcbiAgICAgICAgcVttXVtpXSA9IDA7IFxuICAgIH1cblxuICAgIGZvciAoaSA9IG0gLSAxIDsgaSA+PSAwIDsgaS0tKSB7XG4gICAgICAgIGZvciAoaiA9IG4gLSAxIDsgaiA+PSAwIDsgai0tKSB7XG4gICAgICAgICAgICB2YXIgbWF4LCBtYXhpLCBtYXhqO1xuICAgICAgICAgICAgaWYgKHFbaV1baisxXSA+PSBxW2krMV1bal0pIHtcbiAgICAgICAgICAgICAgICBtYXggPSBxW2ldW2orMV07XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIG1heCA9IHFbaSsxXVtqXTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChxW2krMV1baisxXSArIHBbaV1bal0gPiBtYXgpIHtcbiAgICAgICAgICAgICAgICBtYXggPSBxW2krMV1baisxXSsxO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcVtpXVtqXSA9IG1heDtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHZhciBtYXhRID0gLTE7XG4gICAgZm9yIChpID0gMCA7IGkgPCBtIDsgaSsrKSB7XG4gICAgICAgIGlmIChwW2ldWzBdID09IDEgJiYgKG1heFEgPT0gLTEgfHwgcVtpXVswXSA+IG1heFEpKSB7ICBcbiAgICAgICAgICAgIG1heFEgPSBxW2ldWzBdO1xuICAgICAgICB9XG4gICAgfVxuICAgIGZvciAoaSA9IDAgOyBpIDwgbiA7IGkrKykge1xuICAgICAgICBpZiAocFswXVtpXSA9PSAxICYmIHFbMF1baV0gPiBtYXhRKSB7ICBcbiAgICAgICAgICAgICBtYXhRID0gcVswXVtpXTtcbiAgICAgICAgIH1cbiAgICB9XG5cbiAgICB2YXIgcyA9IG1heFE7XG4gICAgdmFyIHBhdGggPSBuZXcgQXJyYXkoKTtcbiAgICB2YXIgaCA9IC0xO1xuXG4gICAgZm9yIChpID0gMCA7IGkgPCBtIDsgaSsrKSB7XG4gICAgICAgIGZvciAoaiA9IDAgOyBqIDwgbiA7IGorKykge1xuICAgICAgICAgICAgaWYgKHBbaV1bal0gPT0gMSAmJiBxW2ldW2pdID09IG1heFEpIHtcbiAgICAgICAgICAgICAgICB2YXIgeCA9IGk7XG4gICAgICAgICAgICAgICAgdmFyIHkgPSBqO1xuICAgICAgICAgICAgICAgIHBhdGgucHVzaChpKTtcbiAgICAgICAgICAgICAgICBwYXRoLnB1c2goaik7XG4gICAgICAgICAgICAgICAgcyA9IHMgLSAxO1xuICAgICAgICAgICAgICAgIHdoaWxlIChzID4gMCkge1xuICAgICAgICAgICAgICAgICAgICB2YXIgc2lnbmFsID0gdHJ1ZTsgXG4gICAgICAgICAgICAgICAgICAgIHZhciB1LCB2LCB4MSwgeTE7XG4gICAgICAgICAgICAgICAgICAgIGZvciAodSA9IHggKyAxIDsgdSA8IG0gJiYgc2lnbmFsIDsgdSsrKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBmb3IgKCB2ID0geSArIDEgOyB2IDwgbiAmJiBzaWduYWwgOyB2KyspIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAocFt1XVt2XSA9PSAxICYmIHFbdV1bdl0gPT0gcykge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwYXRoLnB1c2godSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBhdGgucHVzaCh2KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgeDEgPSB1O1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB5MSA9IHY7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNpZ25hbD1mYWxzZTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgeCA9IHgxO1xuICAgICAgICAgICAgICAgICAgICB5ID0geTE7XG4gICAgICAgICAgICAgICAgICAgIHMgPSBzLTE7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGggPSBpO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGlmIChoID4gLTEpIHtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgdmFyIHRpID0gMCwgdGogPSAwO1xuICAgIHZhciBzaSwgc2osIHN1bSA9IDA7XG5cbiAgICB2YXIgcmVtb3ZlZCA9IG5ldyBBcnJheSgpO1xuICAgIHZhciBhZGRlZCA9IG5ldyBBcnJheSgpO1xuICAgIHZhciByZW1haW4gPSBuZXcgQXJyYXkoKTtcblxuICAgIGZvciAoayA9IDAgOyBrIDwgcGF0aC5sZW5ndGggOyBrID0gayArIDIpIHtcbiAgICAgICAgc2kgPSBwYXRoW2tdO1xuICAgICAgICBzaiA9IHBhdGhbaysxXTtcbiAgICAgICAgcmVtYWluLnB1c2goe1xuICAgICAgICAgICAgZnJvbTogc2ksIFxuICAgICAgICAgICAgdG86IHNqXG4gICAgICAgIH0pO1xuICAgICAgICBcbiAgICAgICAgZm9yIChqID0gdGkgOyBqIDwgc2kgOyBqKyspIHtcbiAgICAgICAgICAgIHJlbW92ZWQucHVzaCh7XG4gICAgICAgICAgICAgICAgZnJvbTogaiArIHN1bSwgLy8g5LuO5ZOq5YS/5Yig6ZmkXG4gICAgICAgICAgICAgICAgY29udGVudDogYXJyMVtqXVxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICBzdW0tLTtcbiAgICAgICAgfVxuICAgICAgICBmb3IgKGogPSB0aiA7IGogPCBzaiA7IGorKykge1xuICAgICAgICAgICAgYWRkZWQucHVzaCh7XG4gICAgICAgICAgICAgICAgdG86IGosIC8vIOiwg+aVtOWQjueahOS9jee9rlxuICAgICAgICAgICAgICAgIGNvbnRlbnQ6IGFycjJbal1cbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICAgIHRpID0gc2k7XG4gICAgICAgIHRqID0gc2o7XG4gICAgICAgIHRpKys7XG4gICAgICAgIHRqKys7XG4gICAgfVxuICAgIHNpID0gbTtcbiAgICBzaiA9IG47XG4gICAgZm9yIChqID0gdGkgOyBqIDwgc2kgOyBqKyspIHtcbiAgICAgICAgcmVtb3ZlZC5wdXNoKHtcbiAgICAgICAgICAgIGZyb206IGogKyBzdW0sIFxuICAgICAgICAgICAgY29udGVudDogYXJyMVtqXVxuICAgICAgICB9KTtcbiAgICAgICAgc3VtLS07XG4gICAgfVxuICAgIGZvciAoaiA9IHRqIDsgaiA8IHNqIDsgaisrKSB7XG4gICAgICAgIGFkZGVkLnB1c2goe1xuICAgICAgICAgICAgdG86IGosICAvLyDosIPmlbTlkI7nmoTkvY3nva5cbiAgICAgICAgICAgIGNvbnRlbnQ6IGFycjJbal1cbiAgICAgICAgfSk7XG4gICAgfVxuICAgIHJldHVybiB7XG4gICAgICAgIHJlbW92ZWQ6IHJlbW92ZWQsIFxuICAgICAgICBhZGRlZDogYWRkZWQsIFxuICAgICAgICByZW1haW46IHJlbWFpblxuICAgIH1cbn1cblxuLy8g5Y676ZmkPHNwYW4gb2Zmc2V0PVwieHh4XCIgbGVuZ3RoPVwieHh4XCI+PC9zcGFuPueahOW9seWTjeadpeavlOi+g++8jOi/meS4quS4jeWQjOeQhuiuuuS4iuW6lOivpeaUvuWcqOWkluWxgu+8jFxuLy8g5L2G5piv5Zug5Li66L+U5Zue55qEYWRkZWTnm7TmjqXlsLHmmK9zdHJpbmfogIzkuI3mmK9pbmRleO+8jOaUvuWcqOWkluWxguS4jeWlveWkhOeQhu+8jOW+heaUuei/m++8gVxuZnVuY3Rpb24gZXEoaHRtbDEsIGh0bWwyKSB7XG4gICAgLyp2YXIgYTEgPSBodG1sMTtcbiAgICB2YXIgYTEgPSBhMS5zdWJzdHJpbmcoYTEuaW5kZXhPZignPicpICsgMSk7XG4gICAgdmFyIGExID0gYTEuc3Vic3RyaW5nKDAsIGExLmxhc3RJbmRleE9mKCc8JykpO1xuICAgIHZhciBhMiA9IGh0bWwyO1xuICAgIHZhciBhMiA9IGEyLnN1YnN0cmluZyhhMi5pbmRleE9mKCc+JykgKyAxKTtcbiAgICB2YXIgYTIgPSBhMi5zdWJzdHJpbmcoMCwgYTIubGFzdEluZGV4T2YoJzwnKSk7XG4gICAgcmV0dXJuIGExID09IGEyOyovXG4gICAgcmV0dXJuIGh0bWwxID09IGh0bWwyO1xufVxuXG5mdW5jdGlvbiBkaWZmKGFycjEsIGFycjIpIHtcbiAgICBpZiAoIWFycjEpIHtcbiAgICAgICAgYXJyMSA9IG5ldyBBcnJheSgpO1xuICAgIH1cbiAgICBpZiAoIWFycjIpIHtcbiAgICAgICAgYXJyMiA9IG5ldyBBcnJheSgpO1xuICAgIH1cbiAgICByZXR1cm4gZ2V0TWF4TWF0Y2goYXJyMSwgYXJyMik7XG59XG5cbmlmICh0eXBlb2YgbW9kdWxlICE9PSAndW5kZWZpbmVkJyAmJiB0eXBlb2YgZXhwb3J0cyA9PT0gJ29iamVjdCcpIHtcbiAgICBtb2R1bGUuZXhwb3J0cyA9IGRpZmY7XG59IGVsc2UgaWYgKHR5cGVvZiBkZWZpbmUgPT09ICdmdW5jdGlvbicgJiYgZGVmaW5lLmFtZCkge1xuICAgIGRlZmluZShmdW5jdGlvbigpIHsgcmV0dXJuIGRpZmY7IH0pO1xufSBlbHNlIHtcbiAgICB0aGlzLmRpZmYgPSBkaWZmO1xufVxuXG59KS5jYWxsKGZ1bmN0aW9uKCkge1xuICByZXR1cm4gdGhpcyB8fCAodHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcgPyB3aW5kb3cgOiBnbG9iYWwpO1xufSgpKTtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vc3JjL2RpZmYudGV4dC5qc1xuLy8gbW9kdWxlIGlkID0gNlxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0EiLCJzb3VyY2VSb290IjoiIn0=")},function(module,exports,__webpack_require__){eval("// dop is short for Document Operation\n\n/*\n    命令，封装 document.execCommand\n*/\n\nconst Util = __webpack_require__(/*! ./dop.util */ 1);\nconst UA = Util.UA;\nconst dop = Util.dop;\n\n// 构造函数\nfunction Command(inputArea) {\n    this.inputArea = inputArea;\n}\n\nCommand.prototype.do = function(name, value) {\n    const inputArea = this.inputArea;\n\n    // 执行\n    const commandName = '_' + name\n    if (this[commandName]) {\n        // 有自定义事件\n        this[commandName](value);\n    } else {\n        // 默认 command\n        this._execCommand(name, value);\n    }\n}\n\n// 封装 execCommand\nCommand.prototype._execCommand = function (name, value) {\n    document.execCommand(name, false, value);\n}\n\n// 封装 document.queryCommandValue\nCommand.prototype.queryCommandValue = function (name) {\n    return document.queryCommandValue(name);\n}\n\n// 封装 document.queryCommandState\nCommand.prototype.queryCommandState = function (name) {\n    return document.queryCommandState(name);\n}\n\n// 封装 document.queryCommandSupported\nCommand.prototype.queryCommandSupported = function (name) {\n    return document.queryCommandSupported(name);\n}\n\n// 插入html代码\nCommand.prototype._insertHTML = function(html) {\n    const inputArea = this.inputArea;\n    const selection = this.selection;\n\n    const range = this.getRange();\n\n    // 保证传入的参数是 html 代码\n    const test = /^<.+>$/.test(html)\n    if (!test && !UA.isWebkit()) {\n        // webkit 可以插入非 html 格式的文字\n        throw new Error('执行 insertHTML 命令时传入的参数必须是 html 格式')\n    }\n\n    if (this.queryCommandSupported('insertHTML')) {\n        // W3C\n        this._execCommand('insertHTML', html)\n    } else if (range.insertNode) {\n        // IE\n        range.deleteContents();\n        var elems = dop(html);\n        for (var i = 0 ; i < elems.length ; i++) {\n            range.insertNode(elems[i]);\n        }\n    } else if (range.pasteHTML) {\n        // IE <= 10\n        range.pasteHTML(html)\n    } \n}\n\n// 插入 elem\nCommand.prototype._insertElement = function (elem) {\n    const inputArea = this.inputArea;\n    const selection = this.selection;\n    const range = selection.getRange();\n\n    if (range.insertNode) {\n        range.deleteContents();\n        range.insertNode(elem);\n    }\n}\n\n// 直接照搬Selection的getRange\nCommand.prototype.getRange = function() {\n    // 获取当前的选区\n    const selection = window.getSelection();\n    if (selection.rangeCount === 0) {\n        return null;\n    }\n    range = selection.getRangeAt(0);\n\n    // 判断选区内容是否在编辑内容之内\n    let container = range.commonAncestorContainer;\n    if (container.nodeType != 1) {\n        container = container.parentNode;\n    }\n    if (!container) {\n        return null;\n    }\n\n    if (this.inputArea.contains(container)) {\n        return range;\n    }\n    return null;\n};\n\nmodule.exports = Command;\n// export default Command;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3NyYy9kb3AuY29tbWFuZC5qcz8wN2ZmIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIGRvcCBpcyBzaG9ydCBmb3IgRG9jdW1lbnQgT3BlcmF0aW9uXG5cbi8qXG4gICAg5ZG95Luk77yM5bCB6KOFIGRvY3VtZW50LmV4ZWNDb21tYW5kXG4qL1xuXG5jb25zdCBVdGlsID0gcmVxdWlyZSgnLi9kb3AudXRpbCcpO1xuY29uc3QgVUEgPSBVdGlsLlVBO1xuY29uc3QgZG9wID0gVXRpbC5kb3A7XG5cbi8vIOaehOmAoOWHveaVsFxuZnVuY3Rpb24gQ29tbWFuZChpbnB1dEFyZWEpIHtcbiAgICB0aGlzLmlucHV0QXJlYSA9IGlucHV0QXJlYTtcbn1cblxuQ29tbWFuZC5wcm90b3R5cGUuZG8gPSBmdW5jdGlvbihuYW1lLCB2YWx1ZSkge1xuICAgIGNvbnN0IGlucHV0QXJlYSA9IHRoaXMuaW5wdXRBcmVhO1xuXG4gICAgLy8g5omn6KGMXG4gICAgY29uc3QgY29tbWFuZE5hbWUgPSAnXycgKyBuYW1lXG4gICAgaWYgKHRoaXNbY29tbWFuZE5hbWVdKSB7XG4gICAgICAgIC8vIOacieiHquWumuS5ieS6i+S7tlxuICAgICAgICB0aGlzW2NvbW1hbmROYW1lXSh2YWx1ZSk7XG4gICAgfSBlbHNlIHtcbiAgICAgICAgLy8g6buY6K6kIGNvbW1hbmRcbiAgICAgICAgdGhpcy5fZXhlY0NvbW1hbmQobmFtZSwgdmFsdWUpO1xuICAgIH1cbn1cblxuLy8g5bCB6KOFIGV4ZWNDb21tYW5kXG5Db21tYW5kLnByb3RvdHlwZS5fZXhlY0NvbW1hbmQgPSBmdW5jdGlvbiAobmFtZSwgdmFsdWUpIHtcbiAgICBkb2N1bWVudC5leGVjQ29tbWFuZChuYW1lLCBmYWxzZSwgdmFsdWUpO1xufVxuXG4vLyDlsIHoo4UgZG9jdW1lbnQucXVlcnlDb21tYW5kVmFsdWVcbkNvbW1hbmQucHJvdG90eXBlLnF1ZXJ5Q29tbWFuZFZhbHVlID0gZnVuY3Rpb24gKG5hbWUpIHtcbiAgICByZXR1cm4gZG9jdW1lbnQucXVlcnlDb21tYW5kVmFsdWUobmFtZSk7XG59XG5cbi8vIOWwgeijhSBkb2N1bWVudC5xdWVyeUNvbW1hbmRTdGF0ZVxuQ29tbWFuZC5wcm90b3R5cGUucXVlcnlDb21tYW5kU3RhdGUgPSBmdW5jdGlvbiAobmFtZSkge1xuICAgIHJldHVybiBkb2N1bWVudC5xdWVyeUNvbW1hbmRTdGF0ZShuYW1lKTtcbn1cblxuLy8g5bCB6KOFIGRvY3VtZW50LnF1ZXJ5Q29tbWFuZFN1cHBvcnRlZFxuQ29tbWFuZC5wcm90b3R5cGUucXVlcnlDb21tYW5kU3VwcG9ydGVkID0gZnVuY3Rpb24gKG5hbWUpIHtcbiAgICByZXR1cm4gZG9jdW1lbnQucXVlcnlDb21tYW5kU3VwcG9ydGVkKG5hbWUpO1xufVxuXG4vLyDmj5LlhaVodG1s5Luj56CBXG5Db21tYW5kLnByb3RvdHlwZS5faW5zZXJ0SFRNTCA9IGZ1bmN0aW9uKGh0bWwpIHtcbiAgICBjb25zdCBpbnB1dEFyZWEgPSB0aGlzLmlucHV0QXJlYTtcbiAgICBjb25zdCBzZWxlY3Rpb24gPSB0aGlzLnNlbGVjdGlvbjtcblxuICAgIGNvbnN0IHJhbmdlID0gdGhpcy5nZXRSYW5nZSgpO1xuXG4gICAgLy8g5L+d6K+B5Lyg5YWl55qE5Y+C5pWw5pivIGh0bWwg5Luj56CBXG4gICAgY29uc3QgdGVzdCA9IC9ePC4rPiQvLnRlc3QoaHRtbClcbiAgICBpZiAoIXRlc3QgJiYgIVVBLmlzV2Via2l0KCkpIHtcbiAgICAgICAgLy8gd2Via2l0IOWPr+S7peaPkuWFpemdniBodG1sIOagvOW8j+eahOaWh+Wtl1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ+aJp+ihjCBpbnNlcnRIVE1MIOWRveS7pOaXtuS8oOWFpeeahOWPguaVsOW/hemhu+aYryBodG1sIOagvOW8jycpXG4gICAgfVxuXG4gICAgaWYgKHRoaXMucXVlcnlDb21tYW5kU3VwcG9ydGVkKCdpbnNlcnRIVE1MJykpIHtcbiAgICAgICAgLy8gVzNDXG4gICAgICAgIHRoaXMuX2V4ZWNDb21tYW5kKCdpbnNlcnRIVE1MJywgaHRtbClcbiAgICB9IGVsc2UgaWYgKHJhbmdlLmluc2VydE5vZGUpIHtcbiAgICAgICAgLy8gSUVcbiAgICAgICAgcmFuZ2UuZGVsZXRlQ29udGVudHMoKTtcbiAgICAgICAgdmFyIGVsZW1zID0gZG9wKGh0bWwpO1xuICAgICAgICBmb3IgKHZhciBpID0gMCA7IGkgPCBlbGVtcy5sZW5ndGggOyBpKyspIHtcbiAgICAgICAgICAgIHJhbmdlLmluc2VydE5vZGUoZWxlbXNbaV0pO1xuICAgICAgICB9XG4gICAgfSBlbHNlIGlmIChyYW5nZS5wYXN0ZUhUTUwpIHtcbiAgICAgICAgLy8gSUUgPD0gMTBcbiAgICAgICAgcmFuZ2UucGFzdGVIVE1MKGh0bWwpXG4gICAgfSBcbn1cblxuLy8g5o+S5YWlIGVsZW1cbkNvbW1hbmQucHJvdG90eXBlLl9pbnNlcnRFbGVtZW50ID0gZnVuY3Rpb24gKGVsZW0pIHtcbiAgICBjb25zdCBpbnB1dEFyZWEgPSB0aGlzLmlucHV0QXJlYTtcbiAgICBjb25zdCBzZWxlY3Rpb24gPSB0aGlzLnNlbGVjdGlvbjtcbiAgICBjb25zdCByYW5nZSA9IHNlbGVjdGlvbi5nZXRSYW5nZSgpO1xuXG4gICAgaWYgKHJhbmdlLmluc2VydE5vZGUpIHtcbiAgICAgICAgcmFuZ2UuZGVsZXRlQ29udGVudHMoKTtcbiAgICAgICAgcmFuZ2UuaW5zZXJ0Tm9kZShlbGVtKTtcbiAgICB9XG59XG5cbi8vIOebtOaOpeeFp+aQrFNlbGVjdGlvbueahGdldFJhbmdlXG5Db21tYW5kLnByb3RvdHlwZS5nZXRSYW5nZSA9IGZ1bmN0aW9uKCkge1xuICAgIC8vIOiOt+WPluW9k+WJjeeahOmAieWMulxuICAgIGNvbnN0IHNlbGVjdGlvbiA9IHdpbmRvdy5nZXRTZWxlY3Rpb24oKTtcbiAgICBpZiAoc2VsZWN0aW9uLnJhbmdlQ291bnQgPT09IDApIHtcbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuICAgIHJhbmdlID0gc2VsZWN0aW9uLmdldFJhbmdlQXQoMCk7XG5cbiAgICAvLyDliKTmlq3pgInljLrlhoXlrrnmmK/lkKblnKjnvJbovpHlhoXlrrnkuYvlhoVcbiAgICBsZXQgY29udGFpbmVyID0gcmFuZ2UuY29tbW9uQW5jZXN0b3JDb250YWluZXI7XG4gICAgaWYgKGNvbnRhaW5lci5ub2RlVHlwZSAhPSAxKSB7XG4gICAgICAgIGNvbnRhaW5lciA9IGNvbnRhaW5lci5wYXJlbnROb2RlO1xuICAgIH1cbiAgICBpZiAoIWNvbnRhaW5lcikge1xuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG5cbiAgICBpZiAodGhpcy5pbnB1dEFyZWEuY29udGFpbnMoY29udGFpbmVyKSkge1xuICAgICAgICByZXR1cm4gcmFuZ2U7XG4gICAgfVxuICAgIHJldHVybiBudWxsO1xufTtcblxubW9kdWxlLmV4cG9ydHMgPSBDb21tYW5kO1xuLy8gZXhwb3J0IGRlZmF1bHQgQ29tbWFuZDtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL3NyYy9kb3AuY29tbWFuZC5qc1xuLy8gbW9kdWxlIGlkID0gN1xuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==")},function(module,exports,__webpack_require__){eval("//import Selection from './dop.selection.js';\n//import Command from './dop.command.js';\nvar Selection = __webpack_require__(/*! ./dop.selection */ 0);\nvar Command = __webpack_require__(/*! ./dop.command */ 7);\n\n\n/**\n * 构造函数\n */\nfunction Text(inputArea) {\n    this.inputArea = inputArea;\n    this.selection = new Selection(inputArea);\n    this.command = new Command(inputArea);\n\n    this.enableTab();\n    this.rewritePaste();\n    this.rewriteCopy();\n    this.rewriteCut();\n}\n\nText.prototype.initChangeDetect = function(onchange) {\n    var inputArea = this.inputArea;\n    var preHTML = '';\n    var lastTimer = 0;\n    inputArea.onchange = function(e) {\n        clearTimeout(lastTimer);\n        lastTimer = setTimeout(function() {\n            if (preHTML !== inputArea.innerHTML) {\n                preHTML = inputArea.innerHTML;\n                console.log('changed');\n                onchange();\n            }\n        }, 100);\n        return false;\n    }\n\n    inputArea.onblur = inputArea.onchange;\n    inputArea.onkeyup = inputArea.onchange;\n    //inputArea.onpaste = inputArea.onchange;\n    inputArea.oninput = inputArea.onchange;\n}\n\nText.prototype.rewritePaste = function() {\n    var selection = this.selection;\n    this.inputArea.addEventListener('paste', function(e) {\n        // console.log(e.clipboardData.getData());\n        const clipboardData = e.clipboardData || (e.originalEvent && e.originalEvent.clipboardData);\n        let pasteText, pasteHtml;\n        if (clipboardData == null) {\n            pasteText = window.clipboardData && window.clipboardData.getData('text')\n        } else {\n            pasteText = clipboardData.getData('text/plain')\n            pasteHtml = clipboardData.getData('text/html')\n        }\n        if (pasteHtml) {\n            var fake = document.createElement('div');\n            fake.innerHTML = pasteHtml;\n            pasteText = fake.innerText;\n        }\n        pasteText = pasteText.replace(/</gm, '&lt;')\n                .replace(/>/gm, '&gt;')\n                .replace(/\"/gm, '&quot;')\n                .replace(/ /gm, '&nbsp;');\n        pasteHtml = '';\n        var slis = pasteText.split(/\\n/);\n        for (let i = 0 ; i < slis.length ; i++) {\n            var sli = slis[i];\n            if (sli.length == 0) {\n                pasteHtml += '<p><br></p>';\n            } else {\n                pasteHtml += `<p>${sli}</p>`;\n            }\n        }\n\n        // 恢复选取\n        selection.restoreSelection()\n        document.execCommand('insertHTML', false, pasteHtml);\n        selection.saveRange()\n        //selection.restoreSelection()\n        // 使用 execCommand 的粘贴命令，阻止默认行为\n        e.preventDefault();\n\n        // TODO 滚到底部\n    });\n}\n\nText.prototype.enableTab = function() {\n    // 处理tab\n    this.inputArea.addEventListener('keydown', function(e) {\n        if (e.keyCode !== 9) {\n            return false;\n        }\n        if (!document.queryCommandSupported('insertHTML')) {\n            // 必须原生支持 insertHTML 命令\n            return false;\n        }\n        // 我们的输入框中只支持<p>和<br/>，一定是普通文字\n        document.execCommand('insertHTML', false, '&nbsp;&nbsp;&nbsp;&nbsp;')\n        e.preventDefault();\n    });\n}\n\n// 原生的复制会有点问题，这里重写\nText.prototype.rewriteCopy = function() {\n    this.inputArea.addEventListener('copy', function(e) {\n        // 浏览器在copy的时候，会莫名其妙得把<p></p>替换成两个回车符，这里删掉一个\n        // console.log(e.clipboardData.getData());\n        const clipboardData = e.clipboardData || (e.originalEvent && e.originalEvent.clipboardData);\n        if (!clipboardData) {\n            clipboardData = window.clipboardData;\n        }\n        if (clipboardData) {\n            var selectedText = window.getSelection().toString(); \n            /*var fake = document.createElement('div');\n            fake.innerHTML = selectedText;\n            console.dir(fake);\n            selectedText = selectedText.replace(/\\n{2}/gm, '\\n');*/\n            clipboardData.setData('text/plain', selectedText);\n            e.preventDefault();\n        }\n    });\n}\n\nText.prototype.rewriteCut = function() {\n    this.inputArea.addEventListener('cut', function(e) {\n        // 浏览器在copy的时候，会莫名其妙得把<p></p>替换成两个回车符，这里删掉一个\n        // console.log(e.clipboardData.getData());\n        const clipboardData = e.clipboardData || (e.originalEvent && e.originalEvent.clipboardData);\n        if (!clipboardData) {\n            clipboardData = window.clipboardData;\n        }\n        if (clipboardData) {\n            var selectedText = window.getSelection().toString(); \n            //selectedText = selectedText.replace(/\\n{2}/gm, '\\n');\n            clipboardData.setData('text/plain', selectedText);\n            document.execCommand('delete');\n            e.preventDefault();\n        }\n    });\n}\n\nText.prototype.round = function(prefix, suffix) {\n    let sel = this.selection, \n        cmd = this.command;\n\n    sel.saveRange();\n\n    if (prefix) {\n        sel.collapseRange(true);\n        sel.restoreSelection();\n        cmd.do('insertText', prefix);\n        sel.recollapse();\n        sel.offsetStart(prefix.length);\n        sel.restoreSelection();\n    }\n\n    if (suffix) {\n        sel.collapseRange(false);\n        sel.restoreSelection();\n        cmd.do('insertText', suffix);\n        sel.recollapse();\n        sel.restoreSelection();\n    }\n    \n    this.inputArea.onkeyup();\n}\n\nText.prototype.insertLineStart = function(text) {\n    let sel = this.selection, \n        cmd = this.command;\n\n    sel.saveRange();\n    var range = sel.getRange();\n\n    if (!range) {\n        return;\n    }\n\n    var start = sel.getStartElement();\n    while (true) {\n        if (start == this.inputArea) {\n            // 找到最后也找不到根级的p，直接返回\n            return;\n        }\n        if (start.parentNode == this.inputArea) {\n            break;\n        }\n        start = start.parentNode;\n    }\n    if (start) {\n        sel.createRangeByElement(start, true);\n        cmd.do('insertText', text);\n        sel.saveRange(range);\n        sel.restoreSelection();\n    }\n    \n    this.inputArea.onkeyup();\n}\n\n/**\n * mode = 1: toUpper; mode = 2: toLower; mode = 3: first toUpper\n */\nText.prototype.changeCase = function(mode) {\n    let sel = this.selection, \n        cmd = this.command;\n\n    sel.saveRange();\n    let range = sel.getRange();\n    if (!range) {\n        return;\n    }\n\n    if (range.startContainer != range.endContainer) {\n        var start = range.startContainer;\n        range.setEnd(start, start.length);\n    }\n\n    console.dir(range);\n    let text = range.startContainer.textContent;\n    text = text.substring(range.startOffset, range.endOffset);\n\n    switch (mode) {\n    case 1: text = text.toUpperCase(); break;\n    case 2: text = text.toLowerCase(); break;\n    case 3: text = text.substring(0, 1).toUpperCase() + text.substring(1).toLowerCase(); break;\n    default: break;\n    }\n\n    sel.restoreSelection();\n    cmd.do('insertText', text);\n    sel.recollapse();\n    sel.restoreSelection();\n    \n    this.inputArea.onkeyup();\n}\n\nText.prototype.insertList = function(isOrdered) {\n    if (isOrdered) {\n        this.insertLineStart('1. ');\n    } else {\n        this.insertLineStart('- ');\n    }\n};\n\nText.prototype.setContent = function(content) {\n    // 和重写粘贴逻辑类似\n    content = content.replace(/</gm, '&lt;')\n                .replace(/>/gm, '&gt;')\n                .replace(/\"/gm, '&quot;')\n                .replace(/ /gm, '&nbsp;');\n    var html = '';\n    var lines = content.split(/\\n/);\n    for (let i = 0 ; i < lines.length ; i++) {\n        var line = lines[i];\n        if (line.length == 0) {\n            html += '<p><br></p>';\n        } else {\n            html += `<p>${line}</p>`;\n        }\n    }\n\n    this.inputArea.innerHTML = html;\n}\n\nText.prototype.getContent = function() {\n    /*var content = this.inputArea.innerHTML.replace(/<p>/g, '\\n');\n    content = content.replace(/<\\/p>/g, '\\n');\n    content = content.replace(/<br>/g, '\\n');\n    content = content.replace(/<br\\/>/g, '\\n');*/\n    var children = this.inputArea.children;\n    var content = '';\n    for (var i = 0 ; i < children.length ; i++) {\n        var text = children[i].innerText;\n        if (text == '\\n') {\n            content += '\\n';\n        } else {\n            content += text + '\\n';\n        }\n    }\n    return content;\n}\n\nmodule.exports = Text;//# sourceMappingURL=data:application/json;charset=utf-8;base64,")},function(module,exports,__webpack_require__){eval("var defaults = __webpack_require__(/*! ./common.defaults */ 4);\nvar tools = __webpack_require__(/*! ./common.tools */ 5);\nvar marked = __webpack_require__(/*! ./marked.core */ 10);\nvar diff = __webpack_require__(/*! ./diff.text */ 6);\nvar Selection = __webpack_require__(/*! ./dop.selection */ 0);\nvar Text = __webpack_require__(/*! ./dop.text */ 8);\nvar TimeoutLock = tools.TimeoutLock;\n\n/*\n * ==========================================================\n * based：https://github.com/chjj/marked\n * forkmde\n * 功能点参考：https://pandao.github.io/editor.md/\n * ==========================================================\n */\nfunction ForkMDE(parent, options) {\n    var contentName = (options.contentName ) \n        ? options.contentName \n        : defaults.contentName;\n    var contentId = (options.contentId) \n        ? options.contentId \n        : defaults.contentId;\n\n    var centerContent = document.createElement('div');\n    centerContent.id = 'forkmde-inner-editor';\n    centerContent.className = 'forkmde-inner-editor';\n\n    var inputArea = document.createElement('div');\n    inputArea.name = contentName;\n    inputArea.id = contentId;\n    inputArea.className = 'forkmde-inner-content'\n    inputArea.contentEditable = true;\n    inputArea.innerHTML = '<p><br></p>';\n    this.inputArea = inputArea;\n    this.textarea = new Text(inputArea);\n\n    var preview = document.createElement('div');\n    preview.id = 'forkmde-outer-content';\n    preview.className = 'forkmde-outer-content';\n    this.preview = preview;\n\n    centerContent.appendChild(inputArea);\n    centerContent.appendChild(preview);\n\n    var actionsBar = document.createElement('div');\n    actionsBar.id = 'forkmde-inner-actions';\n    actionsBar.className = 'forkmde-inner-actions';\n    this.fillActions(actionsBar, options.actions);\n\n    parent.appendChild(actionsBar);\n    parent.appendChild(centerContent);\n\n    var _this = this;\n    this.lock = new TimeoutLock(null, 300); // 解决两侧scroll事件互相干扰的锁\n\n    this.prevComps = new Array();\n    this.initScroll();\n\n    /*marked.setOptions({\n        highlight: function(code) {\n            return hljs.highlightAuto(code).value;\n        }\n    });*/\n    if (typeof mermaidAPI != 'undefined') {\n        mermaidAPI.initialize({\n            startOnLoad: false, \n            logLevel: 5\n        });\n    }\n\n    this.initOnChange();\n}\n\nForkMDE.prototype.initOnChange = function() {\n    var _this = this;\n    this.textarea.initChangeDetect(function() {\n        _this.triggerChange();\n    }); // 不能直接initChangeDetect(_this.triggerChange)，这样会改变this的指向\n}\n\nForkMDE.prototype.triggerChange = function() {\n    var text = this.textarea.getContent();\n    var thisComps = marked(text, {\n        toArray: true\n    });\n    var simpleComps = new Array();\n    for (var i = 0 ; i < thisComps.length ; i++) {\n        simpleComps.push(thisComps[i].html);;\n    }\n    var ds = diff(this.prevComps, simpleComps);\n    //var ds2 = diff2(this.prevComps, simpleComps);\n    this.prevComps = simpleComps;\n\n    /*console.log(this.prevComps);\n    console.log(thisComps);\n    console.log(ds);*/\n    //console.log(ds2);\n\n    children = this.preview.children;\n    if (ds.remain && ds.remain.length > 0) {\n        for (var i = 0 ; i < ds.remain.length ; i++) {\n            var item = ds.remain[i];\n            var from = item.from, to = item.to;\n            children[item.from].setAttribute('offset', thisComps[to].offset);\n            children[item.from].setAttribute('length', thisComps[to].length); \n        }\n    }\n    if (ds.removed && ds.removed.length > 0) {\n        for (var i = 0 ; i < ds.removed.length ; i++) {\n            var item = ds.removed[i];\n            var from = item.from;\n            // console.log('remove: ' + children[from].innerHTML);\n            this.lock.update(this.inputArea); // 不要让preview的插入/删除操作激发输入框的scroll\n            this.preview.removeChild(children[from])\n            children = this.preview.children;\n        }\n    }\n    if (ds.added && ds.added.length > 0) {\n        for (var i = 0 ; i < ds.added.length ; i++) {\n            var item = ds.added[i];\n            var div = document.createElement(\"div\");\n            var to = item.to;\n            div.innerHTML = '<div offset=\"' + thisComps[to].offset + '\" length=\"' + thisComps[to].length + '\">' + thisComps[to].html + '</div>';\n            var span = div.children[0]; // span貌似拿不到offsetHeight，所以换成了div\n            var existing = to < children.length ? children[to] : null;\n            // console.log('insert: ' + span.innerHTML);\n            this.lock.update(this.inputArea);\n            this.preview.insertBefore(span, existing);\n            children = this.preview.children;\n        }\n    }\n\n    // 渲染完之后要触发一次输入框的scroll，让右侧滚动到对应的位置上\n    $(this.inputArea).scroll();\n}\n\n// 获取inputArea > p中的文本内容\nForkMDE.prototype.pText = function(p) {\n    var text = p.innerText;\n    return text == '\\n' ? '' : text;\n}\n\n// 获取输入区域的滚动字符偏移值\nForkMDE.prototype.getInputScrollOffset = function() {\n    var inputArea = this.inputArea;\n    var children = inputArea.children;\n    var offset = 0;\n    for (var i = 0 ; i < children.length ; i++) {\n        var blockLength = this.pText(children[i]).length + 1, // 1 for '\\n'\n            blockTop = children[i].offsetTop, \n            blockHeight = i < children.length - 1 ? children[i+1].offsetTop - children[i].offsetTop : children[i].offsetHeight, \n            containerTop = inputArea.scrollTop;\n\n        if (blockTop >= containerTop) { \n            // 由于margin的存在，这种情况很普遍，上一个元素还top+height<=containerTop，下一个就top>containerTop了。\n            break;\n        }\n\n        if (blockTop + blockHeight > containerTop) {\n            //console.log('containerTop: ' + containerTop);\n            //console.log('blockTop: ' + blockTop);\n            offset += blockLength * (containerTop - blockTop) / blockHeight;\n            break;\n        }\n        offset += blockLength; // 1 for '\\n'\n    }\n    return offset;\n}\n\nForkMDE.prototype.getInputTargetTop = function(offset) {\n    var inputArea = this.inputArea;\n    var children = inputArea.children;\n    for (var i = 0 ; i < children.length ; i++) {\n        var blockLength = this.pText(children[i]).length + 1, \n            blockTop = children[i].offsetTop, \n            blockHeight = i < children.length - 1 ? children[i+1].offsetTop - children[i].offsetTop : children[i].offsetHeight;\n\n        if (blockLength > offset) {\n            return blockHeight * offset / blockLength+ blockTop;\n        }\n        offset -= blockLength;\n    }\n\n    // 没找到对应点的话直接滚到最后\n    return inputArea.scrollHeight - inputArea.clientHeight;\n}\n\nForkMDE.prototype.getPreviewScrollOffset = function() {\n    var preview = this.preview;\n    var children = preview.children;\n    var FOE = 0; // 处理极端情况\n    for (var i = 0 ; i < children.length ; i++) {\n        var blockOffset = parseInt(children[i].getAttribute('offset')), \n            blockLength = parseInt(children[i].getAttribute('length')), \n            blockTop = children[i].offsetTop, \n            blockHeight = i < children.length - 1 ? children[i+1].offsetTop - children[i].offsetTop : children[i].offsetHeight, \n            containerTop = preview.scrollTop;\n\n        FOE = blockOffset + blockLength;\n        if (blockTop + blockHeight > containerTop) {\n            return blockLength * (containerTop - blockTop) / blockHeight + blockOffset;\n        }\n    }\n    return FOE;\n}\n\n// 根据字符offset把预览区域滚动到目标位置\nForkMDE.prototype.getPreviewTargetTop = function(offset) {\n    var preview = this.preview;\n    var children = preview.children;\n    for (var i = 0 ; i < children.length ; i++) {\n        var blockOffset = parseInt(children[i].getAttribute('offset')), \n            blockLength = parseInt(children[i].getAttribute('length')), \n            blockTop = children[i].offsetTop, \n            blockHeight = i < children.length - 1 ? children[i+1].offsetTop - children[i].offsetTop : children[i].offsetHeight;\n\n        if (blockOffset + blockLength > offset) {\n            return blockHeight * (offset - blockOffset) / blockLength + blockTop;\n        }\n    }\n    // 最后的offset可能是空格之类的没有渲染，直接滚到最后\n    return preview.scrollHeight - preview.clientHeight;\n}\n\nForkMDE.prototype.initScroll = function() {\n    var _this = this;\n    var inputArea = this.inputArea;\n    var preview = this.preview;\n    // 左右两侧的滚动效果会相互触发，左边滚动之后修改右侧的scrollTop就会再触发右侧的滚动事件，\n    // 所以用一个activeElement和activeTime来判断，假设依据是用户不会在100ms之内切换操作。（如果用户\n    // 真的这么操作了，也只是在100ms之内不连带滚动而已，没什么影响）\n    var lock = this.lock;\n    var rendering = null;\n\n    $(inputArea).scroll(function(e) {\n        if (rendering || !lock.check(inputArea)) {\n            return true;\n        }\n        rendering = true;\n        lock.update(inputArea);\n\n        // 找左侧的offset\n        var offset = _this.getInputScrollOffset();\n        // 根据左侧offset找右侧的偏移\n        lock.update(inputArea);\n        preview.scrollTop = _this.getPreviewTargetTop(offset);\n\n        rendering = false;\n    });\n\n    $(preview).scroll(function(e) {\n        if (!lock.check(preview)) {\n            return true;\n        }\n        lock.update(preview);\n        console.log('preview scroll???')\n\n        // 找右侧的offset\n        var offset = _this.getPreviewScrollOffset();\n        // 根据右侧offset找左侧的偏移\n        lock.update(preview);\n        inputArea.scrollTop = _this.getInputTargetTop(offset);\n    });\n}\n\nForkMDE.prototype.fillActions = function(actionsBar, optActions) {\n    var self = this;\n    var actions = [];\n    actions.push({\n        item: '<i class=\"fa fa-bold\" aria-hidden=\"true\" title=\"粗体\"></i>', \n        action: function() { self.textarea.round(\"**\", \"**\"); }\n    });\n\n    actions.push({\n        item: '<i class=\"fa fa-italic\" title=\"斜体\"></i>', \n        action: function() { self.textarea.round(\"*\", \"*\"); }\n    });\n\n    actions.push({\n        item: '<i class=\"fa fa-strikethrough\" title=\"删除线\"></i>', \n        action: function() { self.textarea.round(\"~~\", \"~~\"); }\n    });\n\n    actions.push({\n        item: '<i class=\"fa fa-underline\" title=\"下划线\"></i>', \n        action: function() { self.textarea.round(\"++\", \"++\"); }\n    });\n\n    actions.push({\n        item: '<i class=\"material-icons\" title=\"高亮\">highlight</i>', \n        action: function() { self.textarea.round(\"==\", \"==\"); }\n    });\n\n    actions.push({\n        item: '<i class=\"fa fa-quote-right\" title=\"引用\"></i>', \n        action: function() { self.textarea.insertLineStart(\">\"); }\n    });\n\n    actions.push({\n        item: '<i class=\"fa fa-code\" title=\"行内代码\"></i>', \n        action: function() { self.textarea.round(\"`\", \"`\"); }\n    });\n\n    actions.push({\n        item: '<i class=\"fa fa-file-code-o\" title=\"代码块\"></i>', \n        action: function() { self.textarea.insertLineStart(\"    \"); }\n    });\n\n    actions.push({\n        item: '<i class=\"fa fa-table\" title=\"表格\"></i>', \n        action: function() { self.textarea.round(\"\\nheader 1 | header 2\\n---|---\\nrow 1 col 1 | row 1 col 2\\nrow 2 col 1 | row 2 col 2\\n\\n\", \"\"); }\n    });\n\n    actions.push({\n        item: '<span title=\"仅首字母大写\">Aa</span>', \n        action: function() { self.textarea.changeCase(3); }\n    });\n\n    actions.push({\n        item: '<span title=\"选中部分全部转为大写\">AA</span>', \n        action: function() { self.textarea.changeCase(1); }\n    });\n\n    actions.push({\n        item: '<span title=\"选中部分全部转为小写\">aa</span>', \n        action: function() { self.textarea.changeCase(2); }\n    });\n\n    actions.push({\n        item: '<i class=\"fa fa-photo\" title=\"插入图片\"></i>', \n        action: function() { self.textarea.round(\"![image](https://github.com/fluidicon.png)\"); }\n    });\n\n    actions.push({\n        item: '<span title=\"h1\">H1</span>', \n        action: function() { self.textarea.insertLineStart(\"# \"); }\n    });\n\n    actions.push({\n        item: '<span title=\"h2\">H2</span>', \n        action: function() { self.textarea.insertLineStart(\"## \"); }\n    });\n\n    actions.push({\n        item: '<span title=\"h3\">H3</span>', \n        action: function() { self.textarea.insertLineStart(\"### \"); }\n    });\n\n    actions.push({\n        item: '<span title=\"h4\">H4</span>', \n        action: function() { self.textarea.insertLineStart(\"#### \"); }\n    });\n\n    actions.push({\n        item: '<span title=\"h5\">H5</span>', \n        action: function() { self.textarea.insertLineStart(\"##### \"); }\n    });\n\n    actions.push({\n        item: '<span title=\"h6\">H6</span>', \n        action: function() { self.textarea.insertLineStart(\"###### \"); }\n    });\n\n    actions.push({\n        item: '<i class=\"fa fa-minus\" title=\"横线\"></i>', \n        action: function() { self.textarea.round(\"\\n---\\n\", \"\"); }\n    });\n\n    actions.push({\n        item: '<i class=\"fa fa-link\" title=\"超链接\"></i>', \n        action: function() { self.textarea.round('[example](\"http://example.org\")', ''); }\n    });\n\n    actions.push({\n        item: '<i class=\"fa fa-list-ul\" title=\"无序列表\"></i>', \n        action: function() { self.textarea.insertList(false); }\n    });\n\n    actions.push({\n        item: '<i class=\"fa fa-list-ol\" title=\"有序列表\"></i>', \n        action: function() { self.textarea.insertList(true); }\n    });\n\n    actions.push({\n        item: '<i class=\"fa fa-subscript\" title=\"数学公式\"></i>', \n        action: function() { self.textarea.round('```\\nmath\\nc = \\\\pm\\\\sqrt{a^2 + b^2}\\n```\\n'); }\n    });\n\n    actions.push({\n        item: '<i class=\"fa fa-line-chart\" title=\"流程图\"></i>', \n        // action: function() { _this.insert('```\\nflowChart\\nst=>start: Start:>http://www.google.com[blank]\\ne=>end:>http://www.google.com\\nop1=>operation: My Operation\\nsub1=>subroutine: My Subroutine\\ncond=>condition: Yes or No?:>http://www.google.com\\nio=>inputoutput: catch something...\\n\\nst->op1->cond\\ncond(yes)->io->e\\ncond(no)->sub1(right)->op1\\n```\\n', ''); }\n        action: function() { self.textarea.round('```\\ngraph TD;\\n    A-->B;\\n    A-->C;\\n    B-->D;\\n    C-->D;\\n```\\n'); }\n    });\n\n    actions.push({\n        item: '<i class=\"fa fa-exchange\" title=\"时序图\"></i>', \n        // action: function() { _this.insert('```\\nhandseq\\nA->>C: How are you?\\nB->>A: Great!\\n```\\n', ''); }\n        action: function() { self.textarea.round('```\\nsequenceDiagram\\n    participant John\\n    participant Alice\\n    Alice->>John: Hello John, how are you?\\n    John-->>Alice: Great!\\n```\\n', ''); }\n    });\n\n    actions.push({\n        item: '<i class=\"fa fa-bars\" title=\"甘特图\"></i>', \n        action: function() { self.textarea.round('```\\ngantt\\n    title A Gantt Diagram\\n\\n    section Section\\n    A task           :a1, 2014-01-01, 30d\\n \\\n        Another task     :after a1  , 20d\\n    section Another\\n    Task in sec      :2014-01-12  , 12d\\n    anther task      : 24d\\n```\\n', ''); }\n    });\n\n    if (Array.isArray(optActions)) {\n        for (var i = 0 ; i < optActions.length ; i++) {\n            actions.push(optActions[i]);\n        }\n    }\n\n    actions.push({\n        item: '<i class=\"fa fa-download\" title=\"下载PDF\"></i>', \n        action: function() { \n            /*$print = $('<div class=\"forkmde-outer-content\"></div>');\n            $print.html($(_this.preview).html());\n            $print.css('width', '100%');\n            var options = {\n              mode : 'popup', \n              popClose : 'true', \n              popWd: $('body').width()*0.8 + 'px',\n              popX: $('body').width()*0.1 + 'px',\n              popY: '100px', \n              retainAttr: ['id', 'class', 'style'], \n              extraHead: '<meta charset=\"utf-8\" />,<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\"/>'\n            }\n            $print.printArea(options); */\n        }\n    });\n\n    for (var i in actions) {\n        if (!actions[i].item || !actions[i].action) {\n            continue;\n        }\n        var item = document.createElement('button');\n        item.type = 'button';\n        item.setAttribute('idx', i);\n        item.innerHTML = actions[i].item;\n        item.onclick = function() {\n            actions[this.getAttribute('idx')].action(self);\n        }\n        actionsBar.appendChild(item);\n    }\n}\n\nForkMDE.prototype.setText = function(text) {\n    this.textarea.setContent(text);\n}\n\nForkMDE.prototype.getText = function() {\n    return this.textarea.getContent();\n}\n\n$.fn.forkmdeEditor = function(options) {\n    return new ForkMDE($(this), options)\n}\n\n$.fn.renderMarked = function(text) {\n    $(this).html(marked(text));\n    mermaid.init(undefined, \".mermaid\");\n}\n\nwindow.ForkMDE = {\n    renderMarked: function() {\n\n    }, \n    initEditor: function(element, options) {\n        return new ForkMDE(element, options);\n    }, \n    parse: function(text) {\n        return marked(text);\n    }\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,")},function(module,exports,__webpack_require__){eval("/* WEBPACK VAR INJECTION */(function(global) {/**\n * markdown的语法解析器，脱胎于https://github.com/chjj/marked\n * @author zhangfucheng zhfchdev@gmail.com\n */\n\n;(function() {\n\n/**\n * Block-Level Grammar\n */\nvar bgs = new Array(); // blockGrammars\nvar bgm = { // blockGrammarsMap\n    // 命名规范，regex用单下划线前缀，字符串用双下划线前缀\n    __tag: '(?!(?:'\n        + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code'\n        + '|var|samp|kbd|sub|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo'\n        + '|span|br|wbr|ins|del|img)\\\\b)\\\\w+(?!:/|[^\\\\w\\\\s@]*@)\\\\b',  \n    _bullet: /(?:[*+-]|\\d+\\.)/\n}; \nvar brenders = {}; // blockGrammars Renders\n\n// 参与匹配计算的模式定义\nbgm['newline'] = {\n    pattern: /^\\n+/, \n    test: function(src, lexer) {\n        var cap = this.pattern.exec(src);\n        if (!cap) return {match: false};\n        if (cap[0].length > 1) {\n            lexer.tokens.push({\n                type: 'space', \n                offset: lexer.raw.length - src.length, \n                length: cap[0].length\n            });\n        }\n        return {match: true, group: cap[0]};\n    }, \n    render: function(parser) {\n        return parser.renderer.empty();\n    }\n};\nbgs.push(bgm.newline);\nbrenders['space'] = bgm.newline.render;\n\nbgm['handseq'] = {\n    pattern: /^ *`{3}\\s*handseq\\s+([\\s\\S]+?)`{3}/, \n    test: function(src, lexer) {\n        var cap = this.pattern.exec(src);\n        if (!cap) return {match: false};\n        lexer.tokens.push({\n            type: 'handseq',\n            text: cap[1], \n            offset: lexer.raw.length - src.length, \n            length: cap[0].length\n          });\n        return {match: true, group: cap[0]};\n    }, \n    render: function(parser) {\n        var token = parser.token;\n        return parser.renderer.handseq(token.text);\n    }\n}\nbgs.push(bgm.handseq);\nbrenders['handseq'] = bgm.handseq.render;\n\nbgm['flowchart'] = {\n    pattern: /^ *`{3}\\s*flowchart\\s+([\\s\\S]+?)`{3}/, \n    test: function(src, lexer) {\n        var cap = this.pattern.exec(src);\n        if (!cap) return {match: false};\n        lexer.tokens.push({\n            type: 'flowchart',\n            text: cap[1], \n            offset: lexer.raw.length - src.length, \n            length: cap[0].length\n        });\n        return {match: true, group: cap[0]};\n    }, \n    render: function(parser) {\n        var token = parser.token;\n        return parser.renderer.flowchart(token.text);\n    }\n}\nbgs.push(bgm.flowchart);\nbrenders['flowchart'] = bgm.flowchart.render;\n\nbgm['katex'] = {\n    pattern: /^ *`{3}\\s*math\\s+([\\s\\S]+?)`{3}/, \n    test: function(src, lexer) {\n        var cap = this.pattern.exec(src);\n        if (!cap) return {match: false};\n        lexer.tokens.push({\n            type: 'katex',\n            text: cap[1], \n            offset: lexer.raw.length - src.length, \n            length: cap[0].length\n        });\n        return {match: true, group: cap[0]};\n    }, \n    render: function(parser) {\n        var token = parser.token;\n        return parser.renderer.katex(token.text);\n    }\n}\nbgs.push(bgm.katex);\nbrenders['katex'] = bgm.katex.render;\n\nbgm['mermaid'] = {\n    pattern: /^ *`{3}\\s*mermaid\\s+([\\s\\S]+?)`{3}/, \n    test: function(src, lexer) {\n        var cap = this.pattern.exec(src);\n        if (!cap) return {match: false};\n        lexer.tokens.push({\n            type: 'mermaid',\n            text: cap[1], \n            offset: lexer.raw.length - src.length, \n            length: cap[0].length\n        });\n        return {match: true, group: cap[0]};\n    }, \n    render: function(parser) {\n        var token = parser.token;\n        return parser.renderer.mermaid(token.text);\n    }\n}\nbgs.push(bgm.mermaid);\nbrenders['mermaid'] = bgm.mermaid.render;\n\n// extend feature, alert stype by bootcss\nbgm['bootalert'] = {\n    pattern: /^ *:{3}\\s*([^\\s]+)\\s*([\\s\\S]+?):{3}/, \n    test: function(src, lexer) {\n        var cap = this.pattern.exec(src);\n        if (!cap) return {match: false};\n        lexer.tokens.push({\n            type: 'bootalert',\n            style: cap[1],\n            text: cap[2], \n            offset: lexer.raw.length - src.length, \n            length: cap[0].length\n        });\n        return {match: true, group: cap[0]};\n    }, \n    render: function(parser) {\n        var token = parser.token;\n        return parser.renderer.bootalert(token.style, parser.inline.output(token.text));\n    }\n}\nbgs.push(bgm.bootalert);\nbrenders['bootalert'] = bgm.bootalert.render;\n\nbgm['code'] = {\n    pattern: /^( {4}[^\\n]+\\n*)+/, \n    test: function(src, lexer) {\n        var cap = this.pattern.exec(src);\n        if (!cap) return {match: false};\n        var cap0 = cap[0].replace(/^ {4}/gm, '');\n        lexer.tokens.push({\n            type: 'code',\n            text: lexer.options.pedantic ? cap0 : cap0.replace(/\\n+$/, ''), \n            offset: lexer.raw.length - src.length, \n            length: cap[0].length\n        });\n        return {match: true, group: cap[0]};\n    }, \n    render: function(parser) {\n        var token = parser.token;\n        return parser.renderer.code(token.text,\n                token.lang,\n                token.escaped);\n    }\n};\nbgs.push(bgm['code']);\nbrenders['code'] = bgm.code.render;\n\nbgm['fences'] = { // (gfm)\n    pattern: /^ *(`{3,}|~{3,})[ \\.]*(\\S+)? *\\n([\\s\\S]*?)\\s*\\1 *(?:\\n+|$)/, \n    test: function(src, lexer) {\n        if (!lexer.options.gfm) return {match: false};\n        var cap = this.pattern.exec(src);\n        if (!cap) return {match: false};\n        lexer.tokens.push({\n            type: 'code',\n            lang: cap[2],\n            text: cap[3] || '', \n            offset: lexer.raw.length - src.length, \n            length: cap[0].length\n        });\n        return {match: true, group: cap[0]};\n    }\n};\nbgs.push(bgm['fences']);\n\nbgm['heading'] = { // (gfm)\n    pattern: /^ *(#{1,6}) *([^\\n]+?) *#* *(?:\\n+|$)/, \n    gfm: /^ *(#{1,6}) +([^\\n]+?) *#* *(?:\\n+|$)/, \n    test: function(src, lexer) {\n        var p = (lexer.options.gfm) ? this.gfm : this.pattern;\n        var cap = p.exec(src);\n        if (!cap) return {match: false};\n        lexer.tokens.push({\n            type: 'heading',\n            depth: cap[1].length,\n            text: cap[2], \n            offset: lexer.raw.length - src.length, \n            length: cap[0].length\n        });\n        return {match: true, group: cap[0]};\n    }, \n    render: function(parser) {\n        var token = parser.token;\n        return parser.renderer.heading(\n                parser.inline.output(token.text),\n                token.depth,\n                token.text);\n    }\n};\nbgs.push(bgm.heading);\nbrenders['heading'] = bgm.heading.render;\n\nbgm['nptable'] = { // table no leading pipe (gfm)\n    pattern: /^ *(\\S.*\\|.*)\\n *([-:]+ *\\|[-| :]*)\\n((?:.*\\|.*(?:\\n|$))*)\\n*/, \n    test: function(src, lexer, flag) {\n        if (!lexer.options.tables) return {match: false};\n        if (!flag.top) return {match: false}; // 如果不是从top level调用，不能生成表格\n        var cap = this.pattern.exec(src);\n        if (!cap) return {match: false};\n\n        var item = {\n            type: 'table',\n            header: cap[1].replace(/^ *| *\\| *$/g, '').split(/ *\\| */),\n            align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n            cells: cap[3].replace(/\\n$/, '').split('\\n'), \n            offset: lexer.raw.length - src.length, \n            length: cap[0].length\n        };\n\n        for (i = 0; i < item.align.length; i++) {\n            if (/^ *-+: *$/.test(item.align[i])) {\n                item.align[i] = 'right';\n            } else if (/^ *:-+: *$/.test(item.align[i])) {\n                item.align[i] = 'center';\n            } else if (/^ *:-+ *$/.test(item.align[i])) {\n                item.align[i] = 'left';\n            } else {\n                item.align[i] = null;\n            }\n        }\n\n        for (i = 0; i < item.cells.length; i++) {\n            item.cells[i] = item.cells[i].split(/ *\\| */);\n        }\n\n        lexer.tokens.push(item);\n        return {match: true, group: cap[0]};\n    }, \n    render: function(parser) {\n        var header = '', body = '';\n        var row, cell;\n        var token = parser.token;\n        var renderer = parser.renderer;\n\n        cell = '';\n        for (var i = 0; i < token.header.length; i++) {\n            cell += renderer.tablecell(\n                parser.inline.output(token.header[i]),\n                { header: true, align: token.align[i] }\n            );\n        }\n        header += renderer.tablerow(cell);\n\n        for (var i = 0; i < token.cells.length; i++) {\n            row = token.cells[i];\n            cell = '';\n            for (var j = 0; j < row.length; j++) {\n                cell += renderer.tablecell(\n                    parser.inline.output(row[j]),\n                    { header: false, align: token.align[j] }\n                );\n            }\n            body += renderer.tablerow(cell);\n        }\n        return renderer.table(header, body);\n    }\n};\nbgs.push(bgm.nptable);\nbrenders['table'] = bgm.nptable.render;\n\nbgm['lheading'] = {\n    pattern: /^([^\\n]+)\\n *(=|-){2,} *(?:\\n+|$)/, \n    test: function(src, lexer) {\n        var cap = this.pattern.exec(src);\n        if (!cap) return {match: false};\n        lexer.tokens.push({\n            type: 'heading',\n            depth: cap[2] === '=' ? 1 : 2,\n            text: cap[1], \n            offset: lexer.raw.length - src.length, \n            length: cap[0].length\n        });\n        return {match: true, group: cap[0]};\n    }\n};\nbgs.push(bgm['lheading']); // render和heading相同\n\nbgm['hr'] = {\n    pattern: /^( *[-*_]){3,} *(?:\\n+|$)/, \n    test: function(src, lexer) {\n        var cap = this.pattern.exec(src);\n        if (!cap) return {match: false};\n        lexer.tokens.push({\n            type: 'hr', \n            offset: lexer.raw.length - src.length, \n            length: cap[0].length\n        });\n        return {match: true, group: cap[0]};\n    }, \n    render: function( parser) {\n        return parser.renderer.hr();\n    }\n};\nbgs.push(bgm.hr);\nbrenders['hr'] = bgm.hr.render;\n\nbgm['blockquote'] = {\n    pattern: /^( *>[^\\n]+(\\n(?!def)[^\\n]+)*\\n*)+/, \n    test: function(src, lexer, flag) {\n        var cap = this.pattern.exec(src);\n        if (!cap) return {match: false};\n        lexer.tokens.push({\n            type: 'blockquote_start', \n            offset: lexer.raw.length - src.length, \n            length: cap[0].length\n        });\n\n        var cap0 = cap[0].replace(/^ *> ?/gm, '');\n        // Pass `top` to keep the current \"toplevel\" state. This is exactly\n        // how markdown.pl works.\n        lexer.token(cap0, flag.top, true);\n\n        lexer.tokens.push({\n            type: 'blockquote_end', \n            offset: lexer.raw.length - src.length - cap[0].length, \n            length: 0\n        });\n        return {match: true, group: cap[0]};\n    }, \n    render: function(parser) {\n        var token = parser.token;\n        if (token.type == 'blockquote_end') {\n            return;\n        }\n        var body = '';\n        while (parser.next().type !== 'blockquote_end') {\n            body += parser.tok();\n        }\n        return parser.renderer.blockquote(body);\n    }\n};\nbgs.push(bgm.blockquote);\nbrenders['blockquote_start'] = bgm.blockquote.render;\nbrenders['blockquote_end'] = bgm.blockquote.render;\n\nbgm['list'] = {\n    pattern: /^( *)(bull) [\\s\\S]+?(?:hr|def|\\n{2,}(?! )(?!\\1bull )\\n*|\\s*$)/, \n    item: /^( *)(bull) [^\\n]*(?:\\n(?!\\1bull )[^\\n]*)*/, \n    test: function(src, lexer, flag) {\n        var cap = this.pattern.exec(src);\n        if (!cap) return {match: false};\n        bull = cap[2];\n\n        lexer.tokens.push({\n            type: 'list_start', \n            ordered: bull.length > 1, \n            offset: lexer.raw.length - src.length, \n            length: cap[0].length\n        });\n\n        // Get each top-level item.\n        var cap0 = cap[0].match(this.item);\n\n        var next = false;\n        var total = 0;\n        for (var i = 0 ; i < cap0.length; i++) {\n            item = cap0[i];\n\n            // Remove the list item's bullet\n            // so it is seen as the next token.\n            var space = item.length;\n            item = item.replace(/^ *([*+-]|\\d+\\.) +/, '');\n\n            // Outdent whatever the\n            // list item contains. Hacky.\n            if (~item.indexOf('\\n ')) {\n                space -= item.length;\n                item = !lexer.options.pedantic\n                    ? item.replace(new RegExp('^ {1,' + space + '}', 'gm'), '')\n                    : item.replace(/^ {1,4}/gm, '');\n            }\n\n            // Determine whether the next list item belongs here.\n            // Backpedal if it does not belong in this list.\n            if (lexer.options.smartLists && i !== cap0.length - 1) {\n                b = bgm._bullet.exec(cap0[i + 1])[0];\n                if (bull !== b && !(bull.length > 1 && b.length > 1)) {\n                    src = cap0.slice(i + 1).join('\\n') + src;\n                    i = cap0.length - 1;\n                }\n            }\n\n            // Determine whether item is loose or not.\n            // Use: /(^|\\n)(?! )[^\\n]+\\n\\n(?!\\s*$)/\n            // for discount behavior.\n            loose = next || /\\n\\n(?!\\s*$)/.test(item);\n            if (i !== cap0.length - 1) {\n                next = item.charAt(item.length - 1) === '\\n';\n                if (!loose) loose = next;\n            }\n\n            lexer.tokens.push({\n                type: loose ? 'loose_item_start' : 'list_item_start', \n                offset: lexer.raw.length - src.length + total, \n                length: item.length\n            });\n\n            // Recurse.\n            lexer.token(item, false, flag.bq);\n\n            lexer.tokens.push({\n                type: 'list_item_end', \n                offset: lexer.raw.length - src.length + total + item.length, \n                length: 0\n            });\n            total += item.length;\n        }\n\n        lexer.tokens.push({\n            type: 'list_end', \n            offset: lexer.raw.length - src.length - cap[0].length, \n            length: 0\n        });\n        return {match: true, group: cap[0]};\n    }, \n    render: function(parser) {\n        var tokenType = parser.token.type;\n        switch(tokenType) {\n            case 'list_start': {\n                var ordered = parser.token.ordered;\n                var body = '';\n                while (parser.next().type !== 'list_end') {\n                    body += parser.tok();\n                }\n                return parser.renderer.list(body, ordered);\n            }\n            case 'list_item_start': {\n                var body = '';\n                while (parser.next().type !== 'list_item_end') {\n                    body += parser.token.type === 'text'\n                        ? parser.parseText()\n                        : parser.tok();\n                }\n                return parser.renderer.listitem(body);\n            }\n            case 'loose_item_start': {\n                var body = '';\n                while (parser.next().type !== 'list_item_end') {\n                    body += parser.tok();\n                }\n                return parser.renderer.listitem(body);\n            }\n        }\n    }\n};\nbgs.push(bgm.list);\nbrenders['list_start'] = bgm.list.render;\nbrenders['list_end'] = bgm.list.render;\nbrenders['list_item_start'] = bgm.list.render;\nbrenders['list_item_end'] = bgm.list.render;\nbrenders['loose_item_start'] = bgm.list.render;\n\nbgm['html'] = {\n    pattern: /^ *(?:comment *(?:\\n|\\s*$)|closed *(?:\\n{2,}|\\s*$)|closing *(?:\\n{2,}|\\s*$))/, \n    test: function(src, lexer) {\n        var cap = this.pattern.exec(src);\n        if (!cap) return {match: false};\n        lexer.tokens.push({\n            type: lexer.options.sanitize ? 'paragraph' : 'html',\n            pre: !lexer.options.sanitizer && (cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style'),\n            text: cap[0], \n            offset: lexer.raw.length - src.length, \n            length: cap[0].length\n        });\n        return {match: true, group: cap[0]};\n    }, \n    render: function(parser) {\n        var html = !parser.token.pre && !parser.options.pedantic\n                ? parser.inline.output(parser.token.text)\n                : parser.token.text;\n        return parser.renderer.html(html);\n    }\n};\nbgs.push(bgm.html);\nbrenders['html'] = bgm.html.render;\n\nbgm['def'] = {\n    pattern: /^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +[\"(]([^\\n]+)[\")])? *(?:\\n+|$)/, \n    test: function(src, lexer, flag) {\n        var bq = flag.bq;\n        var top = flag.top;\n        if (bq || !top) return {match: false};\n        var cap = this.pattern.exec(src);\n        if (!cap) return {match: false};\n        lexer.tokens.links[cap[1].toLowerCase()] = {\n            href: cap[2],\n            title: cap[3], \n            offset: lexer.raw.length - src.length, \n            length: cap[0].length\n        };\n        return {match: true, group: cap[0]};\n    }\n};\nbgs.push(bgm.def);\n\nbgm['table'] = { // table (gfm)\n    pattern: /^ *\\|(.+)\\n *\\|( *[-:]+[-| :]*)\\n((?: *\\|.*(?:\\n|$))*)\\n*/, \n    test: function(src, lexer, flag) {\n        var tables = lexer.options.tables;\n        var top = flag.top;\n        if (!tables) return {match: false};\n        if (!top) return {match: false}; // 如果不是从top level调用，不能生成表格\n        var cap = this.pattern.exec(src);\n        if (!cap) return {match: false};\n\n\n        item = {\n            type: 'table',\n            header: cap[1].replace(/^ *| *\\| *$/g, '').split(/ *\\| */),\n            align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n            cells: cap[3].replace(/(?: *\\| *)?\\n$/, '').split('\\n'), \n            offset: lexer.raw.length - src.length, \n            length: cap[0].length\n        };\n\n        for (i = 0; i < item.align.length; i++) {\n            if (/^ *-+: *$/.test(item.align[i])) {\n                item.align[i] = 'right';\n            } else if (/^ *:-+: *$/.test(item.align[i])) {\n                item.align[i] = 'center';\n            } else if (/^ *:-+ *$/.test(item.align[i])) {\n                item.align[i] = 'left';\n            } else {\n                item.align[i] = null;\n            }\n        }\n\n        for (i = 0; i < item.cells.length; i++) {\n            item.cells[i] = item.cells[i]\n                .replace(/^ *\\| *| *\\| *$/g, '')\n                .split(/ *\\| */);\n        }\n\n        lexer.tokens.push(item);\n        return {match: true, group: cap[0]};\n    }\n};\nbgs.push(bgm.table); // render和nptable是一样的\n\nbgm['paragraph'] = { // top-level paragraph\n    pattern: /^((?:[^\\n]+\\n?(?!hr|heading|lheading|blockquote|tag|def))+)\\n*/, \n    gfm: /^/, \n    test: function(src, lexer, flag) {\n        if (!flag.top) return {match: false};\n        var p = (lexer.options.gfm) ? this.gfm : this.pattern;\n        var cap = p.exec(src);\n        if (!cap) return {match: false};\n        lexer.tokens.push({\n            type: 'paragraph',\n            text: cap[1].charAt(cap[1].length - 1) === '\\n'\n                ? cap[1].slice(0, -1)\n                : cap[1], \n            offset: lexer.raw.length - src.length, \n            length: cap[0].length\n        });\n        return {match: true, group: cap[0]};\n    }, \n    render: function(parser) {\n        return parser.renderer.paragraph(parser.inline.output(parser.token.text));\n    }\n};\nbgs.push(bgm.paragraph);\nbrenders['paragraph'] = bgm.paragraph.render;\n\nbgm['text'] = {\n    pattern: /^[^\\n]+/, \n    test: function(src, lexer) {\n        // Top-level should never reach here.\n        var cap = this.pattern.exec(src);\n        if (!cap) return {match: false};\n        lexer.tokens.push({\n            type: 'text',\n            text: cap[0], \n            offset: lexer.raw.length - src.length, \n            length: cap[0].length\n        });\n        return {match: true, group: cap[0]};\n    }, \n    render: function(parser) {\n        return parser.renderer.paragraph(parser.parseText());\n    }\n};\nbgs.push(bgm.text);\nbrenders['text'] = bgm.text.render;\n\n\nbgm.blockquote.pattern = replace(bgm.blockquote.pattern)\n    ('def', bgm.def.pattern)\n    ();\nbgm.list.pattern = replace(bgm.list.pattern)\n    (/bull/g, bgm._bullet)\n    ('hr', '\\\\n+(?=\\\\1?(?:[-*_] *){3,}(?:\\\\n+|$))')\n    ('def', '\\\\n+(?=' + bgm.def.pattern.source + ')')\n    ();\nbgm.list.item = replace(bgm.list.item, 'gm')\n    (/bull/g, bgm._bullet)\n    ();\nbgm.html.pattern = replace(bgm.html.pattern)\n    ('comment', /<!--[\\s\\S]*?-->/)\n    ('closed', /<(tag)[\\s\\S]+?<\\/\\1>/)\n    ('closing', /<tag(?:\"[^\"]*\"|'[^']*'|[^'\">])*?>/)\n    (/tag/g, bgm.__tag)\n    ();\nbgm.paragraph.pattern = replace(bgm.paragraph.pattern)\n    ('hr', bgm.hr.pattern)\n    ('heading', bgm.heading.pattern)\n    ('lheading', bgm.lheading.pattern)\n    ('blockquote', bgm.blockquote.pattern)\n    ('tag', '<' + bgm.__tag)\n    ('def', bgm.def.pattern)\n    ();\nbgm.paragraph.gfm = replace(bgm.paragraph.pattern)\n    ('(?!', '(?!'\n    + bgm.fences.pattern.source.replace('\\\\1', '\\\\2') + '|'\n    + bgm.list.pattern.source.replace('\\\\1', '\\\\3') + '|')\n    ();\n\n\n/**\n * Block Lexer\n */\nfunction Lexer(options) {\n    this.tokens = [];\n    this.tokens.links = {};\n    this.options = options || marked.defaults;\n    this.raw = '';\n}\n\n/**\n * Static Lex Method\n */\nLexer.lex = function(src, options) {\n    var lexer = new Lexer(options);\n    lexer.raw = src;\n    return lexer.lex(src);\n};\n\n/**\n * Preprocessing\n */\nLexer.prototype.lex = function(src) {\n    src = src\n        .replace(/\\r\\n|\\r/g, '\\n')\n        .replace(/\\t/g, '    ')\n        .replace(/\\u00a0/g, ' ')\n        .replace(/\\u2424/g, '\\n');\n\n  return this.token(src, true);\n};\n\n/**\n * Lexing\n */\nLexer.prototype.token = function(src, top, bq) {\n    var src = src.replace(/^ +$/gm, '');\n\n    var flag = {\n        top: top, \n        bq: bq\n    }\n\n    while (src) {\n        var loop = false;\n        for (var i = 0 ; i < bgs.length ; i++) {\n            var blockGrammar = bgs[i];\n            var entry = blockGrammar.test(src, this, flag);\n            if (entry.match) {\n                loop = true;\n                src = src.substring(entry.group.length);\n                break;\n            }\n        }\n        if (loop) {\n            continue;\n        }\n        if (src) {\n            throw new Error('Infinite loop on byte: ' + src.charCodeAt(0));\n        }\n    }\n    return this.tokens;\n};\n\n/**\n * Inline-Level Grammar\n */\nvar igs = new Array(); // InlineGrammars\nvar igm = { // InlineGrammarsMap\n    _inside: /(?:\\[[^\\]]*\\]|[^\\[\\]]|\\](?=[^\\[]*\\]))*/,\n    _href: /\\s*<?([\\s\\S]*?)>?(?:\\s+['\"]([\\s\\S]*?)['\"])?\\s*/\n};\n\nigm['escape'] = {  // 取消转义\n    pattern: /^\\\\([\\\\`*{}\\[\\]()#+\\-.!_<>])/, \n    gfm: /^/,\n    test: function(src, lexer) {\n        var opts = lexer.options;\n        var p = opts.gfm ? this.gfm : this.pattern;\n        var cap = p.exec(src);\n        if (!cap) return {match: false};\n        return {match: true, group: cap[0], out: escape(cap[1])};\n    }\n};\nigs.push(igm['escape']);\n\nigm['katex'] = {\n    pattern: /^`\\$([^\\$]+)\\$`/, \n    test: function(src, lexer) {\n        var cap = this.pattern.exec(src);\n        if (!cap) return {match: false};\n        var out = lexer.renderer.katex(cap[1]);\n        return {match: true, group: cap[0], out: out};\n    }\n};\nigs.push(igm['katex']);\n\nigm['autolink'] = {\n    pattern: /^<([^ >]+(@|:\\/)[^ >]+)>/, \n    test: function(src, lexer) {\n        var opts = lexer.options;\n        var localMangle = opts.mangle ? mangle : function(text) {return text;}\n        var cap = this.pattern.exec(src);\n        if (!cap) return {match: false};\n        if (cap[2] === '@') {\n            text = cap[1].charAt(6) === ':'\n                ? localMangle(cap[1].substring(7))\n                : localMangle(cap[1]);\n            href = localMangle('mailto:') + text;\n        } else {\n            text = escape(cap[1]);\n            href = text;\n        }\n        var out = lexer.renderer.link(href, null, text, opts);\n        return {match: true, group: cap[0], out: out};\n    }\n};\nigs.push(igm['autolink']);\n\nigm['url'] = { // gfm\n    pattern: /^(https?:\\/\\/[^\\s<]+[^<.,:;\"')\\]\\s])/, \n    test: function(src, lexer) {\n        var opts = lexer.options;\n        if (lexer.inlink || !opts.gfm) return {match: false};\n        var cap = this.pattern.exec(src);\n        if (!cap) return {match: false};\n        var text = escape(cap[1]);\n        var href = text;\n        var out = lexer.renderer.link(href, null, text, opts);\n        return {match: true, group: cap[0], out: out};\n    }\n};\nigs.push(igm['url']);\n\nigm['tag'] = {\n    pattern: /^<!--[\\s\\S]*?-->|^<\\/?\\w+(?:\"[^\"]*\"|'[^']*'|[^'\">])*?>/, \n    test: function(src, lexer) {\n        var opts = lexer.options;\n        var cap = this.pattern.exec(src);\n        if (!cap) return {match: false};\n        if (!lexer.inlink && /^<a /i.test(cap[0])) {\n            lexer.inlink = true;\n        } else if (lexer.inlink && /^<\\/a>/i.test(cap[0])) {\n            lexer.inlink = false;\n        }\n        out = opts.sanitize \n                ? opts.sanitizer\n                    ? opts.sanitizer(cap[0])\n                    : escape(cap[0])\n                : cap[0];\n        return {match: true, group: cap[0], out: out};\n    }\n};\nigs.push(igm['tag']);\n\nigm['link'] = {\n    pattern: /^!?\\[(inside)\\]\\(href\\)/, \n    test: function(src, lexer) {\n        var cap = this.pattern.exec(src);\n        if (!cap) return {match: false};\n        lexer.inlink = true;\n        out = lexer.outputLink(cap, {\n            href: cap[2],\n            title: cap[3]\n        });\n        lexer.inlink = false;\n        return {match: true, group: cap[0], out: out};\n    }\n};\nigs.push(igm['link']);\n\nigm['reflink'] = { // reflink, nolink\n    ref: /^!?\\[(inside)\\]\\s*\\[([^\\]]*)\\]/, \n    no: /^!?\\[((?:\\[[^\\]]*\\]|[^\\[\\]])*)\\]/, \n    test: function(src, lexer) {\n        var cap = this.ref.exec(src);\n        if (!cap) {\n            cap = this.no.exec(src);\n        }\n        if (!cap) return {match: false};\n        var link = (cap[2] || cap[1]).replace(/\\s+/g, ' ');\n        var link = lexer.links[link.toLowerCase()];\n        if (!link || !link.href) {\n            var out = cap[0].charAt(0);\n            return {match: true, group: cap[0].charAt(0), out: out};\n        }\n        lexer.inlink = true;\n        var out = lexer.outputLink(cap, link);\n        lexer.inlink = false;\n        return {match: true, group: cap[0], out: out};\n    }\n};\nigs.push(igm['reflink']);\n\nigm['strong'] = {\n    pattern: /^__([\\s\\S]+?)__(?!_)|^\\*\\*([\\s\\S]+?)\\*\\*(?!\\*)/, \n    pedantic: /^__(?=\\S)([\\s\\S]*?\\S)__(?!_)|^\\*\\*(?=\\S)([\\s\\S]*?\\S)\\*\\*(?!\\*)/, \n    test: function(src, lexer) {\n        var p = lexer.options.pedantic ? this.pedantic : this.pattern;\n        var cap = p.exec(src);\n        if (!cap) return {match: false};\n        var out = lexer.renderer.strong(lexer.output(cap[2] || cap[1]));\n        return {match: true, group: cap[0], out: out};\n    }\n};\nigs.push(igm['strong']);\n\nigm['mark'] = {\n    pattern: /^==([\\s\\S]+?)==(?!=)/, \n    test: function(src, lexer) {\n        var cap = this.pattern.exec(src);\n        if (!cap) return {match: false};\n        var out = lexer.renderer.mark(lexer.output(cap[1]));\n        return {match: true, group: cap[0], out: out};\n    }\n};\nigs.push(igm['mark']);\n\nigm['underline'] = {\n    pattern: /^\\+\\+([\\s\\S]+?)\\+\\+(?!\\+)/, \n    test: function(src, lexer) {\n        var cap = this.pattern.exec(src);\n        if (!cap) return {match: false};\n        var out = lexer.renderer.underline(lexer.output(cap[1]));\n        return {match: true, group: cap[0], out: out};\n    }\n};\nigs.push(igm['underline']);\n\nigm['emoji'] = {\n    pattern: /^:([\\S]+?):(?!:)/, \n    test: function(src, lexer) {\n        var cap = this.pattern.exec(src);\n        if (!cap) return {match: false};\n        var out = lexer.renderer.emoji(cap[0]);\n        return {match: true, group: cap[0], out: out};\n    }\n};\nigs.push(igm['emoji']);\n\nigm['em'] = {\n    pattern: /^\\b_((?:[^_]|__)+?)_\\b|^\\*((?:\\*\\*|[\\s\\S])+?)\\*(?!\\*)/, \n    pedantic: /^_(?=\\S)([\\s\\S]*?\\S)_(?!_)|^\\*(?=\\S)([\\s\\S]*?\\S)\\*(?!\\*)/, \n    test: function(src, lexer) {\n        var p = lexer.options.pedantic ? this.pedantic : this.pattern;\n        var cap = p.exec(src);\n        if (!cap) return {match: false};\n        var out = lexer.renderer.em(lexer.output(cap[2] || cap[1]));\n        return {match: true, group: cap[0], out: out};\n    }\n};\nigs.push(igm['em']);\n\nigm['code'] = {\n    pattern: /^(`+)\\s*([\\s\\S]*?[^`])\\s*\\1(?!`)/, \n    test: function(src, lexer) {\n        var cap = this.pattern.exec(src);\n        if (!cap) return {match: false};\n        var out = lexer.renderer.codespan(escape(cap[2], true));\n        return {match: true, group: cap[0], out: out};\n    }\n};\nigs.push(igm['code']);\n\nigm['br'] = {\n    pattern: /^(`+)\\s*([\\s\\S]*?[^`])\\s*\\1(?!`)/, \n    breaks: /^/, \n    test: function(src, lexer) {\n        var p = lexer.options.breaks ? this.breaks : this.pattern;\n        var cap = p.exec(src);\n        if (!cap) return {match: false};\n        var out = lexer.renderer.br(lexer.options);\n        return {match: true, group: cap[0], out: out};\n    }\n};\nigs.push(igm['br']);\n\nigm['del'] = {\n    gfm: /^~~(?=\\S)([\\s\\S]*?\\S)~~/, \n    test: function(src, lexer) {\n        var cap = this.gfm.exec(src);\n        if (!cap) return {match: false};\n        var out = lexer.renderer.del(lexer.output(cap[1]));\n        return {match: true, group: cap[0], out: out};\n    }\n};\nigs.push(igm['del']);\n\nigm['text'] = {\n    pattern: /^[\\s\\S]+?(?=[\\\\:<!\\~=[_*`]| {2,}\\n|$)/, \n    gfm: /^/,\n    breaks: /^/, \n    test: function(src, lexer) {\n        var p = lexer.options.breaks ? this.breaks : this.pattern;\n        var cap = p.exec(src);\n        if (!cap) return {match: false};\n        var out = lexer.renderer.text(escape(lexer.smartypants(cap[0])));\n        return {match: true, group: cap[0], out: out};\n    }\n};\nigs.push(igm['text']);\n\nigm.escape.gfm = replace(igm.escape.pattern)\n    ('])', '~|])')\n    ();\nigm.link.pattern = replace(igm.link.pattern)\n    ('inside', igm._inside)\n    ('href', igm._href)\n    ();\nigm.reflink.ref = replace(igm.reflink.ref)\n    ('inside', igm._inside)\n    ();\nigm.br.breaks = replace(igm.br.pattern)\n    ('{2,}', '*')\n    ();\nigm.text.gfm = replace(igm.text.pattern)\n    (']|', '~]|')\n    ('|', '|https?://|')\n    ();\nigm.text.breaks = replace(igm.text.gfm)\n    ('{2,}', '*')\n    ();\n\n\n/**\n * Inline Lexer & Compiler\n */\nfunction InlineLexer(links, options) {\n    this.options = options || marked.defaults;\n    this.links = links;\n    this.renderer = this.options.renderer || new Renderer;\n\n    if (!this.links) {\n        throw new Error('Tokens array requires a `links` property.');\n    }\n}\n\n/**\n * Static Lexing/Compiling Method\n */\nInlineLexer.output = function(src, links, options) {\n    var inline = new InlineLexer(links, options);\n    return inline.output(src);\n};\n\n/**\n * Lexing/Compiling\n */\nInlineLexer.prototype.output = function(src) {\n    var out = '';\n\n    while (src) {\n        var loop = false;\n        for (var i = 0 ; i < igs.length ; i++) {\n            var inlineGrammar = igs[i];\n            var entry = inlineGrammar.test(src, this);\n            if (entry.out) {\n                out += entry.out;\n            }\n            if (entry.match) {\n                loop = true;\n                src = src.substring(entry.group.length);\n                break;\n            }\n        }\n        if (loop) {\n            continue;\n        }\n\n        if (src) {\n            throw new Error('Infinite loop on byte: ' + src.charCodeAt(0));\n        }\n    }\n    return out;\n};\n\n/**\n * Compile Link\n */\n\nInlineLexer.prototype.outputLink = function(cap, link) {\n    var href = escape(link.href)\n        , title = link.title ? escape(link.title) : null;\n\n    return cap[0].charAt(0) !== '!'\n        ? this.renderer.link(href, title, this.output(cap[1]), this.options)\n        : this.renderer.image(href, title, escape(cap[1]));\n};\n\n/**\n * Smartypants Transformations\n */\n\nInlineLexer.prototype.smartypants = function(text) {\n    if (!this.options.smartypants) return text;\n    return text\n        // em-dashes\n        .replace(/---/g, '\\u2014')\n        // en-dashes\n        .replace(/--/g, '\\u2013')\n        // opening singles\n        .replace(/(^|[-\\u2014/(\\[{\"\\s])'/g, '$1\\u2018')\n        // closing singles & apostrophes\n        .replace(/'/g, '\\u2019')\n        // opening doubles\n        .replace(/(^|[-\\u2014/(\\[{\\u2018\\s])\"/g, '$1\\u201c')\n        // closing doubles\n        .replace(/\"/g, '\\u201d')\n        // ellipses\n        .replace(/\\.{3}/g, '\\u2026');\n};\n\n/**\n * Renderer\n */\nfunction Renderer(options) {\n    this.options = options || {};\n}\n\nRenderer.prototype.empty = function() {\n    return '';\n}\n\nRenderer.prototype.code = function(code, lang, escaped) {\n    if (this.options.highlight) {\n        var out = opts.highlight(code, lang);\n        if (out != null && out !== code) {\n            escaped = true;\n            code = out;\n        }\n    }\n\n    code = (escaped ? code : escape(code, true));\n    if (!lang) {\n        return `<pre><code>${code}\\n</code></pre>`;\n    }\n\n    var classPrefix = this.options.langPrefix;\n    return stringformat('<pre><code class=\"{}{}\">{}\\n</code></pre>\\n', classPrefix, escape(lang, true), code);\n};\n\nRenderer.prototype.blockquote = function(quote) {\n    return stringformat('<blockquote>\\n{}</blockquote>\\n', quote);\n};\n\nRenderer.prototype.html = function(html) {\n    return html;\n};\n\nRenderer.prototype.heading = function(text, level, raw) {\n    // var headerPrefix = this.options.headerPrefix;\n    // return stringformat('<h{} id=\"{}{}\">{}</h{}>\\n', level, headerPrefix, raw.toLowerCase().replace(/[^\\w]+/g, '-'), text, level);\n    return stringformat('<h{}>{}</h{}>\\n', level, text, level);\n};\n\nRenderer.prototype.hr = function() {\n    return this.options.xhtml ? '<hr/>\\n' : '<hr>\\n';\n};\n\nRenderer.prototype.list = function(body, ordered) {\n    var type = ordered ? 'ol' : 'ul';\n    return stringformat('<{}>\\n{}</{}>\\n', type, body, type);\n};\n\nRenderer.prototype.listitem = function(text) {\n    return stringformat('<li>{}</li>\\n', text);\n};\n\nRenderer.prototype.paragraph = function(text) {\n    return stringformat('<p>{}</p>\\n', text);\n};\n\nRenderer.prototype.table = function(header, body) {\n    return stringformat('<table>\\n<thead>\\n{}\\n</thead>\\n<tbody>\\n{}\\n</tbody>\\n</table>\\n', header, body);\n};\n\nRenderer.prototype.tablerow = function(content) {\n    return stringformat('<tr>\\n{}</tr>\\n', content);\n};\n\nRenderer.prototype.tablecell = function(content, flags) {\n    var type = flags.header ? 'th' : 'td';\n    var tagStart = flags.align\n        ? stringformat('<{} style=\"text-align:{}\">', type, flags.align)\n        : stringformat('<{}>', type);\n    var tagEnd = stringformat('</{}>\\n', type);\n    return tagStart + content + tagEnd;\n};\n\n// span level renderer\nRenderer.prototype.strong = function(text) {\n    return `<strong>${text}</strong>`;\n};\n\nRenderer.prototype.mark = function(text) {\n    return `<mark>${text}</mark>`;\n};\n\nRenderer.prototype.underline = function(text) {\n    return `<u>${text}</u>`;\n};\n\nRenderer.prototype.emoji = function(text) {\n    console.log(text);\n    if (emojione) {\n        return emojione.shortnameToImage(text);\n    } else {\n        return text;\n    }\n};\n\nRenderer.prototype.em = function(text) {\n    return `<em>${text}</em>`;\n};\n\nRenderer.prototype.codespan = function(text) {\n    return `<code>${text}</code>`;\n};\n\nRenderer.prototype.br = function() {\n    return this.options.xhtml ? '<br/>' : '<br>';\n};\n\nRenderer.prototype.del = function(text) {\n    return `<del>${text}</del>`;\n};\n\nRenderer.prototype.link = function(href, title, text) {\n    if (this.options.sanitize) {\n        try {\n            var prot = decodeURIComponent(unescape(href))\n              .replace(/[^\\w:]/g, '')\n              .toLowerCase();\n        } catch (e) {\n            return '';\n        }\n        if (prot.indexOf('javascript:') === 0 || prot.indexOf('vbscript:') === 0 || prot.indexOf('data:') === 0) {\n            return '';\n        }\n    }\n    var out = `<a href=\"${href}\"`;\n    if (title) {\n        out += ` title=\"${text}\"`;\n    }\n    if (/^(?!javascript:|vbscript:|#)/.test(href)) {\n        out += ' target=\"__blank\"';\n    }\n    out += `'>${text}</a>`;\n    return out;\n};\n\nRenderer.prototype.image = function(href, title, text) {\n    var style = '';\n    var m; // matcher\n    if (title && (m = /\\/w\\/([^\\/]+)/.exec(title))) {\n        title = title.replace(m[0], '');\n        m = m[1];\n        style += `width: ${m};`;\n    }\n    if (title && (m = /\\/h\\/([^\\/]+)/.exec(title))) {\n        title = title.replace(m[0], '');\n        m = m[1];\n        style += `height: ${m};`;\n    }\n    var out;\n    if (title) {\n        out = `<img src=\"${href}\" alt=\"${text}\" title=\"${title}\" style=\"${style}\"`;\n    } else {\n        out = `<img src=\"${href}\" alt=\"${text}\" style=\"${style}\"`;\n    }\n    out += this.options.xhtml ? '/>' : '>';\n    return out;\n};\n\nRenderer.prototype.text = function(text) {\n    return text;\n};\n\nRenderer.prototype.handseq = function(text) {\n    var container = document.createElement('div');\n    // $container.sequenceDiagram({theme: 'hand'});\n    var d = Diagram.parse(text);\n    var options = {theme: 'hand'};\n    d.drawSVG(container, options);\n    // 如果引用snap.svg-min.js，好像是在异步渲染，innerHTML会取不到\n    return stringformat('<div>{}</div>', container.innerHTML);\n}\n\nRenderer.prototype.flowchart = function(text) {\n    try {\n        var diagram = flowchart.parse(text);\n        //var $container = $('<div id=\"zmd-inner-flowchart\" style=\"display:none;\"></div>');\n        //$('body').append($container);\n        var container = document.createElement('div');\n        diagram.drawSVG(container, {\n            'x': 0,\n            'y': 0,\n            'line-width': 2,\n            'line-length': 30,\n            'text-margin': 10,\n            'font-size': 14,\n            'font-color': 'black',\n            'line-color': 'black',\n            'element-color': 'rgb(108, 108, 108)',\n            'fill': 'white',\n            'yes-text': 'yes',\n            'no-text': 'no',\n            'arrow-end': 'block',\n            'scale': 1,\n            // style symbol types\n            'symbols': {\n              'start': {\n                'font-color': 'red',\n                'element-color': 'rgb(108, 108, 108)',\n                'fill': 'yellow'\n              },\n              'end':{\n                'class': 'end-element'\n              }\n            },\n            // even flowstate support ;-)\n            'flowstate' : {\n              'past' : { 'fill' : '#CCCCCC', 'font-size' : 12},\n              'current' : {'fill' : 'rgb(236, 236, 255)', 'font-color' : 'red', 'font-weight' : 'bold'},\n              'future' : { 'fill' : 'rgb(236, 236, 255)'},\n              'request' : { 'fill' : 'blue'},\n              'invalid': {'fill' : '#444444'},\n              'approved' : { 'fill' : '#58C4A3', 'font-size' : 12, 'yes-text' : 'APPROVED', 'no-text' : 'n/a' },\n              'rejected' : { 'fill' : '#C45879', 'font-size' : 12, 'yes-text' : 'n/a', 'no-text' : 'REJECTED' }\n            }\n          });\n        return stringformat('<div>{}</div>', container.innerHTML);\n    } catch (e) {\n        return text;\n    }\n}\n\n\nRenderer.prototype.katex = function(text) {\n    // var items = text.split(/\\n{2,}/);\n    var items = text.split(/\\n{2}/);\n    var out = '';\n    for (var i = 0 ; i < items.length ; i++) {\n        try {\n            out += katex.renderToString(items[i]);\n        } catch(e) {\n            console.log('render katex error: ' + e);\n            out += items[i];\n        }\n    }\n    return out;\n}\n\nRenderer.prototype.mermaid = function(text) {\n    var container = document.createElement('div');\n    container.id = \"mermaid\" + (new Date()).getTime();\n    if (typeof(mermaidAPI) != \"undefined\") {\n        var graph = mermaidAPI.render(container.id, text.trim(), function(code) {});\n        return stringformat('<div>{}</div>', graph);\n    } else {\n        console.log('please include mermaidAPI.js');\n        return stringformat('<div>{}</div>', text);\n    }\n    \n}\n\nRenderer.prototype.bootalert = function(style, text) {\n    return stringformat('<div class=\"alert alert-{}\">{}</div>', style, text);\n}\n\n/**\n * Parsing & Compiling\n */\n\nfunction Parser(options) {\n    this.tokens = [];\n    this.token = null;\n    this.options = options || marked.defaults;\n    this.options.renderer = this.options.renderer || new Renderer;\n    this.renderer = this.options.renderer;\n    this.renderer.options = this.options;\n}\n\n/**\n * Static Parse Method\n */\nParser.parse = function(tokens, options, renderer) {\n    var parser = new Parser(options, renderer);\n    return parser.parse(tokens);\n};\n\n/**\n * Parse Loop\n */\nParser.prototype.parse = function(tokens) {\n    this.inline = new InlineLexer(tokens.links, this.options, this.renderer);\n    this.tokens = tokens.reverse();\n\n    if (this.options.toArray) {\n        var out = new Array();\n        while (this.next()) {\n            var token = this.token;\n            var fragment = this.tok();\n            if (fragment) {\n                out.push({\n                    html: fragment, \n                    offset: token.offset, \n                    length: token.length\n                });\n            }\n        }\n        return out;\n    } else {\n        var out = '';\n        while (this.next()) {\n            out += this.tok();\n        }\n        return out;\n    }\n};\n\n/**\n * Next Token\n */\nParser.prototype.next = function() {\n    return this.token = this.tokens.pop();\n};\n\n/**\n * Preview Next Token\n */\nParser.prototype.peek = function() {\n    return this.tokens[this.tokens.length - 1] || 0;\n};\n\n/**\n * Parse Text Tokens\n */\nParser.prototype.parseText = function() {\n    var body = this.token.text;\n    while (this.peek().type === 'text') {\n        body += '\\n' + this.next().text;\n    }\n    return this.inline.output(body);\n};\n\n/**\n * Parse Current Token ( for block grammar)\n */\nParser.prototype.tok = function() {\n    var renderFunc = brenders[this.token.type];\n    if (renderFunc) {\n        return renderFunc(this);\n    }\n};\n\n/**\n * Helpers\n */\nfunction escape(html, encode) {\n    return html\n        .replace(!encode ? /&(?!#?\\w+;)/g : /&/g, '&amp;')\n        .replace(/</g, '&lt;')\n        .replace(/>/g, '&gt;')\n        .replace(/\"/g, '&quot;')\n        .replace(/'/g, '&#39;');\n}\n\nfunction unescape(html) {\n    // explicitly match decimal, hex, and named HTML entities \n    return html.replace(/&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/g, function(_, n) {\n        n = n.toLowerCase();\n        if (n === 'colon') return ':';\n        if (n.charAt(0) === '#') {\n            return n.charAt(1) === 'x'\n                ? String.fromCharCode(parseInt(n.substring(2), 16))\n                : String.fromCharCode(+n.substring(1));\n        }\n        return '';\n    });\n}\n\nfunction replace(regex, opt) {\n    regex = regex.source;\n    opt = opt || '';\n    return function self(name, val) {\n        if (!name) return new RegExp(regex, opt);\n        val = val.source || val;\n        val = val.replace(/(^|[^\\[])\\^/g, '$1');\n        regex = regex.replace(name, val);\n        return self;\n    };\n}\n\nfunction merge(obj) {\n    var i = 1\n        , target\n        , key;\n\n    for (; i < arguments.length; i++) {\n        target = arguments[i];\n        for (key in target) {\n            if (Object.prototype.hasOwnProperty.call(target, key)) {\n                obj[key] = target[key];\n            }\n        }\n    }\n    return obj;\n}\n\nfunction stringformat(str) {\n    for (var i = 1 ; i < arguments.length; i++) {\n        str = str.replace('{}', arguments[i]);\n    }\n    return str;\n}\n\n/**\n * Mangle Links\n */\nfunction mangle(text) {\n    var out = '';\n    for (var i = 0; i < text.length ; i++) {\n        var ch = text.charCodeAt(i);\n        if (Math.random() > 0.5) {\n            ch = 'x' + ch.toString(16);\n        }\n        out += '&#' + ch + ';';\n    }\n    return out;\n};\n\n/**\n * Marked\n */\nfunction marked(src, opt, callback) {\n    if (callback || typeof opt === 'function') {\n        if (!callback) {\n            callback = opt;\n            opt = null;\n        }\n\n        opt = merge({}, marked.defaults, opt || {});\n\n        var highlight = opt.highlight\n            , tokens\n            , pending;\n\n        try {\n            tokens = Lexer.lex(src, opt)\n        } catch (e) {\n            return callback(e);\n        }\n\n        pending = tokens.length;\n\n        var done = function(err) {\n            if (err) {\n                opt.highlight = highlight;\n                return callback(err);\n            }\n\n            var out;\n            try {\n                out = Parser.parse(tokens, opt);\n            } catch (e) {\n                err = e;\n            }\n\n            opt.highlight = highlight;\n\n            return err ? callback(err) : callback(null, out);\n        };\n\n        if (!highlight || highlight.length < 3) {\n            return done();\n        }\n\n        delete opt.highlight;\n\n        if (!pending) return done();\n\n        for (var i = 0 ; i < tokens.length ; i++) {\n            (function(token) {\n                if (token.type !== 'code') {\n                    return --pending || done();\n                }\n                return highlight(token.text, token.lang, function(err, code) {\n                    if (err) return done(err);\n                    if (code == null || code === token.text) {\n                        return --pending || done();\n                    }\n                    token.text = code;\n                    token.escaped = true;\n                    --pending || done();\n                });\n            })(tokens[i]);\n        }\n\n        return;\n    }\n    try {\n        if (opt) opt = merge({}, marked.defaults, opt);\n        return Parser.parse(Lexer.lex(src, opt), opt);\n    } catch (e) {\n        e.message += '\\nPlease report this to zhfchdev@gmail.com.';\n        if ((opt || marked.defaults).silent) {\n            return stringformat('<p>An error occured:</p><pre>{}</pre>', escape(e.message + '', true));\n        }\n        throw e;\n    }\n}\n\n/**\n * Options\n */\nmarked.options =\nmarked.setOptions = function(opt) {\n    merge(marked.defaults, opt);\n    return marked;\n};\n\nmarked.defaults = {\n    gfm: true,\n    tables: true,\n    breaks: false,\n    pedantic: false,\n    sanitize: false,\n    sanitizer: null,\n    mangle: true,\n    smartLists: false,\n    silent: false,\n    highlight: null,\n    langPrefix: 'lang-',\n    smartypants: false,\n    headerPrefix: '',\n    xhtml: false, \n    toArray: false\n};\n\n/**\n * Expose\n */\nmarked.Parser = Parser;\nmarked.parser = Parser.parse;\n\nmarked.renderer = new Renderer;\n\nmarked.Lexer = Lexer;\nmarked.lexer = Lexer.lex;\n\nmarked.InlineLexer = InlineLexer;\nmarked.inlineLexer = InlineLexer.output;\n\nmarked.parse = marked;\n\nif (true) {\n    module.exports = marked;\n} else if (typeof define === 'function' && define.amd) {\n    define(function() { return marked; });\n} else {\n    this.marked = marked;\n}\n\n}).call(function() {\n  return this || (typeof window !== 'undefined' ? window : global);\n}());\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../../../../../usr/local/lib/~/webpack/buildin/global.js */ 2)))//# sourceMappingURL=data:application/json;charset=utf-8;base64,")},function(g,n,I){g.exports=I(3)}])});